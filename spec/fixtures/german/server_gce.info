[0;33;49mConnecting to GCE...[0m
[0;33;49mLooking for german-dployr in europe-west1-a...[0m
--- &129 !ruby/object:Fog::Compute::Google::Server
service: &127 !ruby/object:Fog::Compute::Google::Real
  project: innotechapp
  api_version: v1
  api_url: https://www.googleapis.com/compute/v1/projects/
  default_network: default
  client: !ruby/object:Google::APIClient
    host: www.googleapis.com
    port: 443
    discovery_path: /discovery/v1
    user_agent: fog/1.22.0
    authorization: !ruby/object:Signet::OAuth2::Client
      authorization_uri: 
      token_credential_uri: !ruby/object:Addressable::URI
        validation_deferred: false
        scheme: https
        normalized_scheme: 
        uri_string: 
        hash: 
        host: accounts.google.com
        authority: 
        normalized_host: 
        path: /o/oauth2/token
        normalized_path: 
      client_id: 
      client_secret: 
      scope:
      - https://www.googleapis.com/auth/compute
      - https://www.googleapis.com/auth/devstorage.read_write
      state: 
      code: 
      redirect_uri: 
      username: 
      password: 
      issuer: 388158271394-hiqo47ehuagjshtrtsgicsnn0uvmdk06@developer.gserviceaccount.com
      principal: 
      expiry: 60
      audience: https://accounts.google.com/o/oauth2/token
      signing_key: !ruby/object:OpenSSL::PKey::RSA {}
      extension_parameters: {}
      grant_type: 
      refresh_token: 
      issued_at: 2014-04-30 10:19:01.369916000 +02:00
      access_token: ya29.1.AADtN_WJbBmzJHgObecqGRB9uPBcVfGQeE8nnlOui6yL9VeJ7Tf8ByD8R6bTBzQaWLXcx14
      expires_in: 3600
    auto_refresh_token: true
    key: 
    user_ip: 
    retries: 0
    discovery_uris:
      compute:v1: !ruby/object:Addressable::URI
        validation_deferred: false
        scheme: https
        normalized_scheme: 
        uri_string: 
        hash: 
        host: www.googleapis.com
        authority: 
        normalized_host: 
        path: /discovery/v1/apis/compute/v1/rest
        normalized_path: 
    discovery_documents:
      compute:v1: &1
        kind: discovery#restDescription
        etag: '"HJfB7SSlJ6kNdXNWBxUhszBJJug/IZpr6FzrstzCGETlajRH4H_fIdk"'
        discoveryVersion: v1
        id: compute:v1
        name: compute
        version: v1
        title: Compute Engine API
        description: API for the Google Compute Engine service.
        ownerDomain: google.com
        ownerName: Google
        icons:
          x16: http://www.google.com/images/icons/product/compute_engine-16.png
          x32: http://www.google.com/images/icons/product/compute_engine-32.png
        documentationLink: https://developers.google.com/compute/docs/reference/latest/
        protocol: rest
        baseUrl: https://www.googleapis.com/compute/v1/projects/
        basePath: /compute/v1/projects/
        rootUrl: https://www.googleapis.com/
        servicePath: compute/v1/projects/
        batchPath: batch
        parameters:
          alt:
            type: string
            description: Data format for the response.
            default: json
            enum:
            - json
            enumDescriptions:
            - Responses with Content-Type of application/json
            location: query
          fields:
            type: string
            description: Selector specifying which fields to include in a partial
              response.
            location: query
          key:
            type: string
            description: API key. Your API key identifies your project and provides
              you with API access, quota, and reports. Required unless you provide
              an OAuth 2.0 token.
            location: query
          oauth_token:
            type: string
            description: OAuth 2.0 token for the current user.
            location: query
          prettyPrint:
            type: boolean
            description: Returns response with indentations and line breaks.
            default: 'true'
            location: query
          quotaUser:
            type: string
            description: Available to use for quota purposes for server-side applications.
              Can be any arbitrary string assigned to a user, but should not exceed
              40 characters. Overrides userIp if both are provided.
            location: query
          userIp:
            type: string
            description: IP address of the site where the request originates. Use
              this if you want to enforce per-user limits.
            location: query
        auth:
          oauth2:
            scopes:
              https://www.googleapis.com/auth/compute:
                description: View and manage your Google Compute Engine resources
              https://www.googleapis.com/auth/compute.readonly:
                description: View your Google Compute Engine resources
              https://www.googleapis.com/auth/devstorage.full_control:
                description: Manage your data and permissions in Google Cloud Storage
              https://www.googleapis.com/auth/devstorage.read_only:
                description: View your data in Google Cloud Storage
              https://www.googleapis.com/auth/devstorage.read_write:
                description: Manage your data in Google Cloud Storage
        schemas:
          AccessConfig:
            id: AccessConfig
            type: object
            description: An access configuration attached to an instance's network
              interface.
            properties:
              kind:
                type: string
                description: Type of the resource.
                default: compute#accessConfig
              name:
                type: string
                description: Name of this access configuration.
              natIP:
                type: string
                description: An external IP address associated with this instance.
                  Specify an unused static IP address available to the project. If
                  not specified, the external IP will be drawn from a shared ephemeral
                  pool.
              type:
                type: string
                description: Type of configuration. Must be set to "ONE_TO_ONE_NAT".
                  This configures port-for-port NAT to the internet.
                default: ONE_TO_ONE_NAT
                enum:
                - ONE_TO_ONE_NAT
                enumDescriptions:
                - ''
          Address:
            id: Address
            type: object
            description: A reserved address resource.
            properties:
              address:
                type: string
                description: The IP address represented by this resource.
              creationTimestamp:
                type: string
                description: Creation timestamp in RFC3339 text format (output only).
              description:
                type: string
                description: An optional textual description of the resource; provided
                  by the client when the resource is created.
              id:
                type: string
                description: Unique identifier for the resource; defined by the server
                  (output only).
                format: uint64
              kind:
                type: string
                description: Type of the resource.
                default: compute#address
              name:
                type: string
                description: Name of the resource; provided by the client when the
                  resource is created. The name must be 1-63 characters long, and
                  comply with RFC1035.
                pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                annotations:
                  required:
                  - compute.addresses.insert
              region:
                type: string
                description: URL of the region where the address resides (output only).
              selfLink:
                type: string
                description: Server defined URL for the resource (output only).
              status:
                type: string
                description: The status of the address (output only).
                enum:
                - IN_USE
                - RESERVED
                enumDescriptions:
                - ''
                - ''
              users:
                type: array
                description: The resources that are using this address resource.
                items:
                  type: string
          AddressAggregatedList:
            id: AddressAggregatedList
            type: object
            properties:
              id:
                type: string
                description: Unique identifier for the resource; defined by the server
                  (output only).
              items:
                type: object
                description: A map of scoped address lists.
                additionalProperties:
                  $ref: AddressesScopedList
                  description: Name of the scope containing this set of addresses.
              kind:
                type: string
                description: Type of resource.
                default: compute#addressAggregatedList
              nextPageToken:
                type: string
                description: A token used to continue a truncated list request (output
                  only).
              selfLink:
                type: string
                description: Server defined URL for this resource (output only).
          AddressList:
            id: AddressList
            type: object
            description: Contains a list of address resources.
            properties:
              id:
                type: string
                description: Unique identifier for the resource; defined by the server
                  (output only).
              items:
                type: array
                description: The address resources.
                items:
                  $ref: Address
              kind:
                type: string
                description: Type of resource.
                default: compute#addressList
              nextPageToken:
                type: string
                description: A token used to continue a truncated list request (output
                  only).
              selfLink:
                type: string
                description: Server defined URL for the resource (output only).
          AddressesScopedList:
            id: AddressesScopedList
            type: object
            properties:
              addresses:
                type: array
                description: List of addresses contained in this scope.
                items:
                  $ref: Address
              warning:
                type: object
                description: Informational warning which replaces the list of addresses
                  when the list is empty.
                properties:
                  code:
                    type: string
                    description: The warning type identifier for this warning.
                    enum:
                    - DEPRECATED_RESOURCE_USED
                    - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                    - INJECTED_KERNELS_DEPRECATED
                    - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                    - NEXT_HOP_CANNOT_IP_FORWARD
                    - NEXT_HOP_INSTANCE_NOT_FOUND
                    - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                    - NEXT_HOP_NOT_RUNNING
                    - NO_RESULTS_ON_PAGE
                    - REQUIRED_TOS_AGREEMENT
                    - RESOURCE_NOT_DELETED
                    - UNREACHABLE
                    enumDescriptions:
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                  data:
                    type: array
                    description: 'Metadata for this warning in ''key: value'' format.'
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                          description: A key for the warning data.
                        value:
                          type: string
                          description: A warning data value corresponding to the key.
                  message:
                    type: string
                    description: Optional human-readable details for this warning.
          AttachedDisk:
            id: AttachedDisk
            type: object
            description: An instance-attached disk resource.
            properties:
              autoDelete:
                type: boolean
                description: Whether the disk will be auto-deleted when the instance
                  is deleted (but not when the disk is detached from the instance).
              boot:
                type: boolean
                description: Indicates that this is a boot disk. VM will use the first
                  partition of the disk for its root filesystem.
              deviceName:
                type: string
                description: Persistent disk only; must be unique within the instance
                  when specified. This represents a unique device name that is reflected
                  into the /dev/ tree of a Linux operating system running within the
                  instance. If not specified, a default will be chosen by the system.
              index:
                type: integer
                description: A zero-based index to assign to this disk, where 0 is
                  reserved for the boot disk. If not specified, the server will choose
                  an appropriate value (output only).
                format: int32
              initializeParams:
                $ref: AttachedDiskInitializeParams
                description: Initialization parameters.
              kind:
                type: string
                description: Type of the resource.
                default: compute#attachedDisk
              mode:
                type: string
                description: The mode in which to attach this disk, either "READ_WRITE"
                  or "READ_ONLY".
                enum:
                - READ_ONLY
                - READ_WRITE
                enumDescriptions:
                - ''
                - ''
              source:
                type: string
                description: Persistent disk only; the URL of the persistent disk
                  resource.
              type:
                type: string
                description: Type of the disk, either "SCRATCH" or "PERSISTENT". Note
                  that persistent disks must be created before you can specify them
                  here.
                enum:
                - PERSISTENT
                - SCRATCH
                enumDescriptions:
                - ''
                - ''
                annotations:
                  required:
                  - compute.instances.insert
          AttachedDiskInitializeParams:
            id: AttachedDiskInitializeParams
            type: object
            description: Initialization parameters for the new disk (Mutually exclusive
              with 'source', can currently only be specified on the boot disk).
            properties:
              diskName:
                type: string
                description: Name of the disk (when not provided defaults to the name
                  of the instance).
              diskSizeGb:
                type: string
                description: Size of the disk in base-2 GB.
                format: int64
              sourceImage:
                type: string
                description: The source image used to create this disk.
          DeprecationStatus:
            id: DeprecationStatus
            type: object
            description: Deprecation status for a public resource.
            properties:
              deleted:
                type: string
                description: An optional RFC3339 timestamp on or after which the deprecation
                  state of this resource will be changed to DELETED.
              deprecated:
                type: string
                description: An optional RFC3339 timestamp on or after which the deprecation
                  state of this resource will be changed to DEPRECATED.
              obsolete:
                type: string
                description: An optional RFC3339 timestamp on or after which the deprecation
                  state of this resource will be changed to OBSOLETE.
              replacement:
                type: string
                description: A URL of the suggested replacement for the deprecated
                  resource. The deprecated resource and its replacement must be resources
                  of the same kind.
              state:
                type: string
                description: The deprecation state. Can be "DEPRECATED", "OBSOLETE",
                  or "DELETED". Operations which create a new resource using a "DEPRECATED"
                  resource will return successfully, but with a warning indicating
                  the deprecated resource and recommending its replacement. New uses
                  of "OBSOLETE" or "DELETED" resources will result in an error.
                enum:
                - DELETED
                - DEPRECATED
                - OBSOLETE
                enumDescriptions:
                - ''
                - ''
                - ''
          Disk:
            id: Disk
            type: object
            description: A persistent disk resource.
            properties:
              creationTimestamp:
                type: string
                description: Creation timestamp in RFC3339 text format (output only).
              description:
                type: string
                description: An optional textual description of the resource; provided
                  by the client when the resource is created.
              id:
                type: string
                description: Unique identifier for the resource; defined by the server
                  (output only).
                format: uint64
              kind:
                type: string
                description: Type of the resource.
                default: compute#disk
              name:
                type: string
                description: Name of the resource; provided by the client when the
                  resource is created. The name must be 1-63 characters long, and
                  comply with RFC1035.
                pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                annotations:
                  required:
                  - compute.disks.insert
              options:
                type: string
                description: Internal use only.
              selfLink:
                type: string
                description: Server defined URL for the resource (output only).
              sizeGb:
                type: string
                description: Size of the persistent disk, specified in GB. This parameter
                  is optional when creating a disk from a disk image or a snapshot,
                  otherwise it is required.
                format: int64
              sourceImage:
                type: string
                description: The source image used to create this disk. Once the source
                  image has been deleted from the system, this field will not be set,
                  even if an image with the same name has been re-created.
              sourceImageId:
                type: string
                description: The 'id' value of the image used to create this disk.
                  This value may be used to determine whether the disk was created
                  from the current or a previous instance of a given image.
              sourceSnapshot:
                type: string
                description: The source snapshot used to create this disk. Once the
                  source snapshot has been deleted from the system, this field will
                  be cleared, and will not be set even if a snapshot with the same
                  name has been re-created.
              sourceSnapshotId:
                type: string
                description: The 'id' value of the snapshot used to create this disk.
                  This value may be used to determine whether the disk was created
                  from the current or a previous instance of a given disk snapshot.
              status:
                type: string
                description: The status of disk creation (output only).
                enum:
                - CREATING
                - FAILED
                - READY
                - RESTORING
                enumDescriptions:
                - ''
                - ''
                - ''
                - ''
              zone:
                type: string
                description: URL of the zone where the disk resides (output only).
          DiskAggregatedList:
            id: DiskAggregatedList
            type: object
            properties:
              id:
                type: string
                description: Unique identifier for the resource; defined by the server
                  (output only).
              items:
                type: object
                description: A map of scoped disk lists.
                additionalProperties:
                  $ref: DisksScopedList
                  description: Name of the scope containing this set of disks.
              kind:
                type: string
                description: Type of resource.
                default: compute#diskAggregatedList
              nextPageToken:
                type: string
                description: A token used to continue a truncated list request (output
                  only).
              selfLink:
                type: string
                description: Server defined URL for this resource (output only).
          DiskList:
            id: DiskList
            type: object
            description: Contains a list of persistent disk resources.
            properties:
              id:
                type: string
                description: Unique identifier for the resource; defined by the server
                  (output only).
              items:
                type: array
                description: The persistent disk resources.
                items:
                  $ref: Disk
              kind:
                type: string
                description: Type of resource.
                default: compute#diskList
              nextPageToken:
                type: string
                description: A token used to continue a truncated list request (output
                  only).
              selfLink:
                type: string
                description: Server defined URL for this resource (output only).
          DisksScopedList:
            id: DisksScopedList
            type: object
            properties:
              disks:
                type: array
                description: List of disks contained in this scope.
                items:
                  $ref: Disk
              warning:
                type: object
                description: Informational warning which replaces the list of disks
                  when the list is empty.
                properties:
                  code:
                    type: string
                    description: The warning type identifier for this warning.
                    enum:
                    - DEPRECATED_RESOURCE_USED
                    - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                    - INJECTED_KERNELS_DEPRECATED
                    - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                    - NEXT_HOP_CANNOT_IP_FORWARD
                    - NEXT_HOP_INSTANCE_NOT_FOUND
                    - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                    - NEXT_HOP_NOT_RUNNING
                    - NO_RESULTS_ON_PAGE
                    - REQUIRED_TOS_AGREEMENT
                    - RESOURCE_NOT_DELETED
                    - UNREACHABLE
                    enumDescriptions:
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                  data:
                    type: array
                    description: 'Metadata for this warning in ''key: value'' format.'
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                          description: A key for the warning data.
                        value:
                          type: string
                          description: A warning data value corresponding to the key.
                  message:
                    type: string
                    description: Optional human-readable details for this warning.
          Firewall:
            id: Firewall
            type: object
            description: A firewall resource.
            properties:
              allowed:
                type: array
                description: The list of rules specified by this firewall. Each rule
                  specifies a protocol and port-range tuple that describes a permitted
                  connection.
                items:
                  type: object
                  properties:
                    IPProtocol:
                      type: string
                      description: Required; this is the IP protocol that is allowed
                        for this rule. This can either be one of the following well
                        known protocol strings ["tcp", "udp", "icmp", "esp", "ah",
                        "sctp"], or the IP protocol number.
                    ports:
                      type: array
                      description: |-
                        An optional list of ports which are allowed. It is an error to specify this for any protocol that isn't UDP or TCP. Each entry must be either an integer or a range. If not specified, connections through any port are allowed.

                        Example inputs include: ["22"], ["80","443"] and ["12345-12349"].
                      items:
                        type: string
              creationTimestamp:
                type: string
                description: Creation timestamp in RFC3339 text format (output only).
              description:
                type: string
                description: An optional textual description of the resource; provided
                  by the client when the resource is created.
              id:
                type: string
                description: Unique identifier for the resource; defined by the server
                  (output only).
                format: uint64
              kind:
                type: string
                description: Type of the resource.
                default: compute#firewall
              name:
                type: string
                description: Name of the resource; provided by the client when the
                  resource is created. The name must be 1-63 characters long, and
                  comply with RFC1035.
                pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                annotations:
                  required:
                  - compute.firewalls.insert
                  - compute.firewalls.patch
              network:
                type: string
                description: URL of the network to which this firewall is applied;
                  provided by the client when the firewall is created.
                annotations:
                  required:
                  - compute.firewalls.insert
                  - compute.firewalls.patch
              selfLink:
                type: string
                description: Server defined URL for the resource (output only).
              sourceRanges:
                type: array
                description: A list of IP address blocks expressed in CIDR format
                  which this rule applies to. One or both of sourceRanges and sourceTags
                  may be set; an inbound connection is allowed if either the range
                  or the tag of the source matches.
                items:
                  type: string
              sourceTags:
                type: array
                description: A list of instance tags which this rule applies to. One
                  or both of sourceRanges and sourceTags may be set; an inbound connection
                  is allowed if either the range or the tag of the source matches.
                items:
                  type: string
              targetTags:
                type: array
                description: A list of instance tags indicating sets of instances
                  located on network which may make network connections as specified
                  in allowed. If no targetTags are specified, the firewall rule applies
                  to all instances on the specified network.
                items:
                  type: string
          FirewallList:
            id: FirewallList
            type: object
            description: Contains a list of firewall resources.
            properties:
              id:
                type: string
                description: Unique identifier for the resource; defined by the server
                  (output only).
              items:
                type: array
                description: The firewall resources.
                items:
                  $ref: Firewall
              kind:
                type: string
                description: Type of resource.
                default: compute#firewallList
              nextPageToken:
                type: string
                description: A token used to continue a truncated list request (output
                  only).
              selfLink:
                type: string
                description: Server defined URL for this resource (output only).
          ForwardingRule:
            id: ForwardingRule
            type: object
            description: A ForwardingRule resource. A ForwardingRule resource specifies
              which pool of target VMs to forward a packet to if it matches the given
              [IPAddress, IPProtocol, portRange] tuple.
            properties:
              IPAddress:
                type: string
                description: Value of the reserved IP address that this forwarding
                  rule is serving on behalf of. The address resource must live in
                  the same region as the forwarding rule. If left empty (default value),
                  an ephemeral IP will be assigned.
              IPProtocol:
                type: string
                description: The IP protocol to which this rule applies, valid options
                  are 'TCP', 'UDP', 'ESP', 'AH' or 'SCTP'
                enum:
                - AH
                - ESP
                - SCTP
                - TCP
                - UDP
                enumDescriptions:
                - ''
                - ''
                - ''
                - ''
                - ''
              creationTimestamp:
                type: string
                description: Creation timestamp in RFC3339 text format (output only).
              description:
                type: string
                description: An optional textual description of the resource; provided
                  by the client when the resource is created.
              id:
                type: string
                description: Unique identifier for the resource; defined by the server
                  (output only).
                format: uint64
              kind:
                type: string
                description: Type of the resource.
                default: compute#forwardingRule
              name:
                type: string
                description: Name of the resource; provided by the client when the
                  resource is created. The name must be 1-63 characters long, and
                  comply with RFC1035.
                pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
              portRange:
                type: string
                description: 'Applicable only when ''IPProtocol'' is ''TCP'', ''UDP''
                  or ''SCTP'', only packets addressed to ports in the specified range
                  will be forwarded to ''target''. If ''portRange'' is left empty
                  (default value), all ports are forwarded. Forwarding rules with
                  the same [IPAddress, IPProtocol] pair must have disjoint port ranges.
                  @pattern: \d+(?:-\d+)?'
              region:
                type: string
                description: URL of the region where the forwarding rule resides (output
                  only).
              selfLink:
                type: string
                description: Server defined URL for the resource (output only).
              target:
                type: string
                description: The URL of the target resource to receive the matched
                  traffic. It must live in the same region as this forwarding rule.
          ForwardingRuleAggregatedList:
            id: ForwardingRuleAggregatedList
            type: object
            properties:
              id:
                type: string
                description: Unique identifier for the resource; defined by the server
                  (output only).
              items:
                type: object
                description: A map of scoped forwarding rule lists.
                additionalProperties:
                  $ref: ForwardingRulesScopedList
                  description: Name of the scope containing this set of addresses.
              kind:
                type: string
                description: Type of resource.
                default: compute#forwardingRuleAggregatedList
              nextPageToken:
                type: string
                description: A token used to continue a truncated list request (output
                  only).
              selfLink:
                type: string
                description: Server defined URL for this resource (output only).
          ForwardingRuleList:
            id: ForwardingRuleList
            type: object
            description: Contains a list of ForwardingRule resources.
            properties:
              id:
                type: string
                description: Unique identifier for the resource; defined by the server
                  (output only).
              items:
                type: array
                description: The ForwardingRule resources.
                items:
                  $ref: ForwardingRule
              kind:
                type: string
                description: Type of resource.
                default: compute#forwardingRuleList
              nextPageToken:
                type: string
                description: A token used to continue a truncated list request (output
                  only).
              selfLink:
                type: string
                description: Server defined URL for this resource (output only).
          ForwardingRulesScopedList:
            id: ForwardingRulesScopedList
            type: object
            properties:
              forwardingRules:
                type: array
                description: List of forwarding rules contained in this scope.
                items:
                  $ref: ForwardingRule
              warning:
                type: object
                description: Informational warning which replaces the list of forwarding
                  rules when the list is empty.
                properties:
                  code:
                    type: string
                    description: The warning type identifier for this warning.
                    enum:
                    - DEPRECATED_RESOURCE_USED
                    - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                    - INJECTED_KERNELS_DEPRECATED
                    - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                    - NEXT_HOP_CANNOT_IP_FORWARD
                    - NEXT_HOP_INSTANCE_NOT_FOUND
                    - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                    - NEXT_HOP_NOT_RUNNING
                    - NO_RESULTS_ON_PAGE
                    - REQUIRED_TOS_AGREEMENT
                    - RESOURCE_NOT_DELETED
                    - UNREACHABLE
                    enumDescriptions:
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                  data:
                    type: array
                    description: 'Metadata for this warning in ''key: value'' format.'
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                          description: A key for the warning data.
                        value:
                          type: string
                          description: A warning data value corresponding to the key.
                  message:
                    type: string
                    description: Optional human-readable details for this warning.
          HealthCheckReference:
            id: HealthCheckReference
            type: object
            properties:
              healthCheck:
                type: string
          HealthStatus:
            id: HealthStatus
            type: object
            properties:
              healthState:
                type: string
                description: Health state of the instance.
                enum:
                - HEALTHY
                - UNHEALTHY
                enumDescriptions:
                - ''
                - ''
              instance:
                type: string
                description: URL of the instance resource.
              ipAddress:
                type: string
                description: The IP address represented by this resource.
          HttpHealthCheck:
            id: HttpHealthCheck
            type: object
            description: An HttpHealthCheck resource. This resource defines a template
              for how individual VMs should be checked for health, via HTTP.
            properties:
              checkIntervalSec:
                type: integer
                description: How often (in seconds) to send a health check. The default
                  value is 5 seconds.
                format: int32
              creationTimestamp:
                type: string
                description: Creation timestamp in RFC3339 text format (output only).
              description:
                type: string
                description: An optional textual description of the resource; provided
                  by the client when the resource is created.
              healthyThreshold:
                type: integer
                description: A so-far unhealthy VM will be marked healthy after this
                  many consecutive successes. The default value is 2.
                format: int32
              host:
                type: string
                description: The value of the host header in the HTTP health check
                  request. If left empty (default value), the public IP on behalf
                  of which this health check is performed will be used.
              id:
                type: string
                description: Unique identifier for the resource; defined by the server
                  (output only).
                format: uint64
              kind:
                type: string
                description: Type of the resource.
                default: compute#httpHealthCheck
              name:
                type: string
                description: Name of the resource; provided by the client when the
                  resource is created. The name must be 1-63 characters long, and
                  comply with RFC1035.
                pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
              port:
                type: integer
                description: The TCP port number for the HTTP health check request.
                  The default value is 80.
                format: int32
              requestPath:
                type: string
                description: The request path of the HTTP health check request. The
                  default value is "/".
              selfLink:
                type: string
                description: Server defined URL for the resource (output only).
              timeoutSec:
                type: integer
                description: How long (in seconds) to wait before claiming failure.
                  The default value is 5 seconds.
                format: int32
              unhealthyThreshold:
                type: integer
                description: A so-far healthy VM will be marked unhealthy after this
                  many consecutive failures. The default value is 2.
                format: int32
          HttpHealthCheckList:
            id: HttpHealthCheckList
            type: object
            description: Contains a list of HttpHealthCheck resources.
            properties:
              id:
                type: string
                description: Unique identifier for the resource; defined by the server
                  (output only).
              items:
                type: array
                description: The HttpHealthCheck resources.
                items:
                  $ref: HttpHealthCheck
              kind:
                type: string
                description: Type of resource.
                default: compute#httpHealthCheckList
              nextPageToken:
                type: string
                description: A token used to continue a truncated list request (output
                  only).
              selfLink:
                type: string
                description: Server defined URL for this resource (output only).
          Image:
            id: Image
            type: object
            description: A disk image resource.
            properties:
              archiveSizeBytes:
                type: string
                description: Size of the image tar.gz archive stored in Google Cloud
                  Storage (in bytes).
                format: int64
              creationTimestamp:
                type: string
                description: Creation timestamp in RFC3339 text format (output only).
              deprecated:
                $ref: DeprecationStatus
                description: The deprecation status associated with this image.
              description:
                type: string
                description: Textual description of the resource; provided by the
                  client when the resource is created.
              id:
                type: string
                description: Unique identifier for the resource; defined by the server
                  (output only).
                format: uint64
              kind:
                type: string
                description: Type of the resource.
                default: compute#image
              name:
                type: string
                description: Name of the resource; provided by the client when the
                  resource is created. The name must be 1-63 characters long, and
                  comply with RFC1035.
                pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                annotations:
                  required:
                  - compute.images.insert
              rawDisk:
                type: object
                description: The raw disk image parameters.
                properties:
                  containerType:
                    type: string
                    description: The format used to encode and transmit the block
                      device. Should be TAR. This is just a container and transmission
                      format and not a runtime format. Provided by the client when
                      the disk image is created.
                    default: TAR
                  sha1Checksum:
                    type: string
                    description: An optional SHA1 checksum of the disk image before
                      unpackaging; provided by the client when the disk image is created.
                    pattern: '[a-f0-9]{40}'
                  source:
                    type: string
                    description: The full Google Cloud Storage URL where the disk
                      image is stored; provided by the client when the disk image
                      is created.
                    annotations:
                      required:
                      - compute.images.insert
              selfLink:
                type: string
                description: Server defined URL for the resource (output only).
              sourceType:
                type: string
                description: Must be "RAW"; provided by the client when the disk image
                  is created.
                default: RAW
                enum:
                - RAW
                enumDescriptions:
                - ''
                annotations:
                  required:
                  - compute.images.insert
              status:
                type: string
                description: Status of the image (output only). It will be one of
                  the following READY - after image has been successfully created
                  and is ready for use FAILED - if creating the image fails for some
                  reason PENDING - the image creation is in progress An image can
                  be used to create other resources suck as instances only after the
                  image has been successfully created and the status is set to READY.
                enum:
                - FAILED
                - PENDING
                - READY
                enumDescriptions:
                - ''
                - ''
                - ''
          ImageList:
            id: ImageList
            type: object
            description: Contains a list of disk image resources.
            properties:
              id:
                type: string
                description: Unique identifier for the resource; defined by the server
                  (output only).
              items:
                type: array
                description: The disk image resources.
                items:
                  $ref: Image
              kind:
                type: string
                description: Type of resource.
                default: compute#imageList
              nextPageToken:
                type: string
                description: A token used to continue a truncated list request (output
                  only).
              selfLink:
                type: string
                description: Server defined URL for this resource (output only).
          Instance:
            id: Instance
            type: object
            description: An instance resource.
            properties:
              canIpForward:
                type: boolean
                description: Allows this instance to send packets with source IP addresses
                  other than its own and receive packets with destination IP addresses
                  other than its own. If this instance will be used as an IP gateway
                  or it will be set as the next-hop in a Route resource, say true.
                  If unsure, leave this set to false.
              creationTimestamp:
                type: string
                description: Creation timestamp in RFC3339 text format (output only).
              description:
                type: string
                description: An optional textual description of the resource; provided
                  by the client when the resource is created.
              disks:
                type: array
                description: Array of disks associated with this instance. Persistent
                  disks must be created before you can assign them.
                items:
                  $ref: AttachedDisk
              id:
                type: string
                description: Unique identifier for the resource; defined by the server
                  (output only).
                format: uint64
              kind:
                type: string
                description: Type of the resource.
                default: compute#instance
              machineType:
                type: string
                description: URL of the machine type resource describing which machine
                  type to use to host the instance; provided by the client when the
                  instance is created.
                annotations:
                  required:
                  - compute.instances.insert
              metadata:
                $ref: Metadata
                description: Metadata key/value pairs assigned to this instance. Consists
                  of custom metadata or predefined keys; see Instance documentation
                  for more information.
              name:
                type: string
                description: Name of the resource; provided by the client when the
                  resource is created. The name must be 1-63 characters long, and
                  comply with RFC1035.
                pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                annotations:
                  required:
                  - compute.instances.insert
              networkInterfaces:
                type: array
                description: Array of configurations for this interface. This specifies
                  how this interface is configured to interact with other network
                  services, such as connecting to the internet. Currently, ONE_TO_ONE_NAT
                  is the only access config supported. If there are no accessConfigs
                  specified, then this instance will have no external internet access.
                items:
                  $ref: NetworkInterface
              scheduling:
                $ref: Scheduling
                description: Scheduling options for this instance.
              selfLink:
                type: string
                description: Server defined URL for this resource (output only).
              serviceAccounts:
                type: array
                description: A list of service accounts each with specified scopes,
                  for which access tokens are to be made available to the instance
                  through metadata queries.
                items:
                  $ref: ServiceAccount
              status:
                type: string
                description: 'Instance status. One of the following values: "PROVISIONING",
                  "STAGING", "RUNNING", "STOPPING", "STOPPED", "TERMINATED" (output
                  only).'
                enum:
                - PROVISIONING
                - RUNNING
                - STAGING
                - STOPPED
                - STOPPING
                - TERMINATED
                enumDescriptions:
                - ''
                - ''
                - ''
                - ''
                - ''
                - ''
              statusMessage:
                type: string
                description: An optional, human-readable explanation of the status
                  (output only).
              tags:
                $ref: Tags
                description: A list of tags to be applied to this instance. Used to
                  identify valid sources or targets for network firewalls. Provided
                  by the client on instance creation. The tags can be later modified
                  by the setTags method. Each tag within the list must comply with
                  RFC1035.
              zone:
                type: string
                description: URL of the zone where the instance resides (output only).
          InstanceAggregatedList:
            id: InstanceAggregatedList
            type: object
            properties:
              id:
                type: string
                description: Unique identifier for the resource; defined by the server
                  (output only).
              items:
                type: object
                description: A map of scoped instance lists.
                additionalProperties:
                  $ref: InstancesScopedList
                  description: Name of the scope containing this set of instances.
              kind:
                type: string
                description: Type of resource.
                default: compute#instanceAggregatedList
              nextPageToken:
                type: string
                description: A token used to continue a truncated list request (output
                  only).
              selfLink:
                type: string
                description: Server defined URL for this resource (output only).
          InstanceList:
            id: InstanceList
            type: object
            description: Contains a list of instance resources.
            properties:
              id:
                type: string
                description: Unique identifier for the resource; defined by the server
                  (output only).
              items:
                type: array
                description: A list of instance resources.
                items:
                  $ref: Instance
              kind:
                type: string
                description: Type of resource.
                default: compute#instanceList
              nextPageToken:
                type: string
                description: A token used to continue a truncated list request (output
                  only).
              selfLink:
                type: string
                description: Server defined URL for this resource (output only).
          InstanceReference:
            id: InstanceReference
            type: object
            properties:
              instance:
                type: string
          InstancesScopedList:
            id: InstancesScopedList
            type: object
            properties:
              instances:
                type: array
                description: List of instances contained in this scope.
                items:
                  $ref: Instance
              warning:
                type: object
                description: Informational warning which replaces the list of instances
                  when the list is empty.
                properties:
                  code:
                    type: string
                    description: The warning type identifier for this warning.
                    enum:
                    - DEPRECATED_RESOURCE_USED
                    - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                    - INJECTED_KERNELS_DEPRECATED
                    - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                    - NEXT_HOP_CANNOT_IP_FORWARD
                    - NEXT_HOP_INSTANCE_NOT_FOUND
                    - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                    - NEXT_HOP_NOT_RUNNING
                    - NO_RESULTS_ON_PAGE
                    - REQUIRED_TOS_AGREEMENT
                    - RESOURCE_NOT_DELETED
                    - UNREACHABLE
                    enumDescriptions:
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                  data:
                    type: array
                    description: 'Metadata for this warning in ''key: value'' format.'
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                          description: A key for the warning data.
                        value:
                          type: string
                          description: A warning data value corresponding to the key.
                  message:
                    type: string
                    description: Optional human-readable details for this warning.
          MachineType:
            id: MachineType
            type: object
            description: A machine type resource.
            properties:
              creationTimestamp:
                type: string
                description: Creation timestamp in RFC3339 text format (output only).
              deprecated:
                $ref: DeprecationStatus
                description: The deprecation status associated with this machine type.
              description:
                type: string
                description: An optional textual description of the resource.
              guestCpus:
                type: integer
                description: Count of CPUs exposed to the instance.
                format: int32
              id:
                type: string
                description: Unique identifier for the resource; defined by the server
                  (output only).
                format: uint64
              imageSpaceGb:
                type: integer
                description: Space allotted for the image, defined in GB.
                format: int32
              kind:
                type: string
                description: Type of the resource.
                default: compute#machineType
              maximumPersistentDisks:
                type: integer
                description: Maximum persistent disks allowed.
                format: int32
              maximumPersistentDisksSizeGb:
                type: string
                description: Maximum total persistent disks size (GB) allowed.
                format: int64
              memoryMb:
                type: integer
                description: Physical memory assigned to the instance, defined in
                  MB.
                format: int32
              name:
                type: string
                description: Name of the resource.
                pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
              scratchDisks:
                type: array
                description: List of extended scratch disks assigned to the instance.
                items:
                  type: object
                  properties:
                    diskGb:
                      type: integer
                      description: Size of the scratch disk, defined in GB.
                      format: int32
              selfLink:
                type: string
                description: Server defined URL for the resource (output only).
              zone:
                type: string
                description: Url of the zone where the machine type resides (output
                  only).
          MachineTypeAggregatedList:
            id: MachineTypeAggregatedList
            type: object
            properties:
              id:
                type: string
                description: Unique identifier for the resource; defined by the server
                  (output only).
              items:
                type: object
                description: A map of scoped machine type lists.
                additionalProperties:
                  $ref: MachineTypesScopedList
                  description: Name of the scope containing this set of machine types.
              kind:
                type: string
                description: Type of resource.
                default: compute#machineTypeAggregatedList
              nextPageToken:
                type: string
                description: A token used to continue a truncated list request (output
                  only).
              selfLink:
                type: string
                description: Server defined URL for this resource (output only).
          MachineTypeList:
            id: MachineTypeList
            type: object
            description: Contains a list of machine type resources.
            properties:
              id:
                type: string
                description: Unique identifier for the resource; defined by the server
                  (output only).
              items:
                type: array
                description: The machine type resources.
                items:
                  $ref: MachineType
              kind:
                type: string
                description: Type of resource.
                default: compute#machineTypeList
              nextPageToken:
                type: string
                description: A token used to continue a truncated list request (output
                  only).
              selfLink:
                type: string
                description: Server defined URL for this resource (output only).
          MachineTypesScopedList:
            id: MachineTypesScopedList
            type: object
            properties:
              machineTypes:
                type: array
                description: List of machine types contained in this scope.
                items:
                  $ref: MachineType
              warning:
                type: object
                description: Informational warning which replaces the list of machine
                  types when the list is empty.
                properties:
                  code:
                    type: string
                    description: The warning type identifier for this warning.
                    enum:
                    - DEPRECATED_RESOURCE_USED
                    - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                    - INJECTED_KERNELS_DEPRECATED
                    - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                    - NEXT_HOP_CANNOT_IP_FORWARD
                    - NEXT_HOP_INSTANCE_NOT_FOUND
                    - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                    - NEXT_HOP_NOT_RUNNING
                    - NO_RESULTS_ON_PAGE
                    - REQUIRED_TOS_AGREEMENT
                    - RESOURCE_NOT_DELETED
                    - UNREACHABLE
                    enumDescriptions:
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                  data:
                    type: array
                    description: 'Metadata for this warning in ''key: value'' format.'
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                          description: A key for the warning data.
                        value:
                          type: string
                          description: A warning data value corresponding to the key.
                  message:
                    type: string
                    description: Optional human-readable details for this warning.
          Metadata:
            id: Metadata
            type: object
            description: A metadata key/value entry.
            properties:
              fingerprint:
                type: string
                description: Fingerprint of this resource. A hash of the metadata's
                  contents. This field is used for optimistic locking. An up-to-date
                  metadata fingerprint must be provided in order to modify metadata.
                format: byte
              items:
                type: array
                description: Array of key/value pairs. The total size of all keys
                  and values must be less than 512 KB.
                items:
                  type: object
                  properties:
                    key:
                      type: string
                      description: 'Key for the metadata entry. Keys must conform
                        to the following regexp: [a-zA-Z0-9-_]+, and be less than
                        128 bytes in length. This is reflected as part of a URL in
                        the metadata server. Additionally, to avoid ambiguity, keys
                        must not conflict with any other metadata keys for the project.'
                      pattern: '[a-zA-Z0-9-_]{1,128}'
                      annotations:
                        required:
                        - compute.instances.insert
                        - compute.projects.setCommonInstanceMetadata
                    value:
                      type: string
                      description: Value for the metadata entry. These are free-form
                        strings, and only have meaning as interpreted by the image
                        running in the instance. The only restriction placed on values
                        is that their size must be less than or equal to 32768 bytes.
                      annotations:
                        required:
                        - compute.instances.insert
                        - compute.projects.setCommonInstanceMetadata
              kind:
                type: string
                description: Type of the resource.
                default: compute#metadata
          Network:
            id: Network
            type: object
            description: A network resource.
            properties:
              IPv4Range:
                type: string
                description: 'Required; The range of internal addresses that are legal
                  on this network. This range is a CIDR specification, for example:
                  192.168.0.0/16. Provided by the client when the network is created.'
                pattern: '[0-9]{1,3}(?:\.[0-9]{1,3}){3}/[0-9]{1,2}'
                annotations:
                  required:
                  - compute.networks.insert
              creationTimestamp:
                type: string
                description: Creation timestamp in RFC3339 text format (output only).
              description:
                type: string
                description: An optional textual description of the resource; provided
                  by the client when the resource is created.
              gatewayIPv4:
                type: string
                description: An optional address that is used for default routing
                  to other networks. This must be within the range specified by IPv4Range,
                  and is typically the first usable address in that range. If not
                  specified, the default value is the first usable address in IPv4Range.
                pattern: '[0-9]{1,3}(?:\.[0-9]{1,3}){3}'
              id:
                type: string
                description: Unique identifier for the resource; defined by the server
                  (output only).
                format: uint64
              kind:
                type: string
                description: Type of the resource.
                default: compute#network
              name:
                type: string
                description: Name of the resource; provided by the client when the
                  resource is created. The name must be 1-63 characters long, and
                  comply with RFC1035.
                pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                annotations:
                  required:
                  - compute.networks.insert
              selfLink:
                type: string
                description: Server defined URL for the resource (output only).
          NetworkInterface:
            id: NetworkInterface
            type: object
            description: A network interface resource attached to an instance.
            properties:
              accessConfigs:
                type: array
                description: Array of configurations for this interface. This specifies
                  how this interface is configured to interact with other network
                  services, such as connecting to the internet. Currently, ONE_TO_ONE_NAT
                  is the only access config supported. If there are no accessConfigs
                  specified, then this instance will have no external internet access.
                items:
                  $ref: AccessConfig
              name:
                type: string
                description: Name of the network interface, determined by the server;
                  for network devices, these are e.g. eth0, eth1, etc. (output only).
              network:
                type: string
                description: URL of the network resource attached to this interface.
                annotations:
                  required:
                  - compute.instances.insert
              networkIP:
                type: string
                description: An optional IPV4 internal network address assigned to
                  the instance for this network interface (output only).
          NetworkList:
            id: NetworkList
            type: object
            description: Contains a list of network resources.
            properties:
              id:
                type: string
                description: Unique identifier for the resource; defined by the server
                  (output only).
              items:
                type: array
                description: The network resources.
                items:
                  $ref: Network
              kind:
                type: string
                description: Type of resource.
                default: compute#networkList
              nextPageToken:
                type: string
                description: A token used to continue a truncated list request (output
                  only).
              selfLink:
                type: string
                description: Server defined URL for this resource (output only).
          Operation:
            id: Operation
            type: object
            description: An operation resource, used to manage asynchronous API requests.
            properties:
              clientOperationId:
                type: string
                description: An optional identifier specified by the client when the
                  mutation was initiated. Must be unique for all operation resources
                  in the project (output only).
              creationTimestamp:
                type: string
                description: Creation timestamp in RFC3339 text format (output only).
              endTime:
                type: string
                description: The time that this operation was completed. This is in
                  RFC 3339 format (output only).
              error:
                type: object
                description: If errors occurred during processing of this operation,
                  this field will be populated (output only).
                properties:
                  errors:
                    type: array
                    description: The array of errors encountered while processing
                      this operation.
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                          description: The error type identifier for this error.
                        location:
                          type: string
                          description: Indicates the field in the request which caused
                            the error. This property is optional.
                        message:
                          type: string
                          description: An optional, human-readable error message.
              httpErrorMessage:
                type: string
                description: If operation fails, the HTTP error message returned,
                  e.g. NOT FOUND. (output only).
              httpErrorStatusCode:
                type: integer
                description: If operation fails, the HTTP error status code returned,
                  e.g. 404. (output only).
                format: int32
              id:
                type: string
                description: Unique identifier for the resource; defined by the server
                  (output only).
                format: uint64
              insertTime:
                type: string
                description: The time that this operation was requested. This is in
                  RFC 3339 format (output only).
              kind:
                type: string
                description: Type of the resource.
                default: compute#operation
              name:
                type: string
                description: Name of the resource (output only).
              operationType:
                type: string
                description: Type of the operation. Examples include "insert", "update",
                  and "delete" (output only).
              progress:
                type: integer
                description: An optional progress indicator that ranges from 0 to
                  100. There is no requirement that this be linear or support any
                  granularity of operations. This should not be used to guess at when
                  the operation will be complete. This number should be monotonically
                  increasing as the operation progresses (output only).
                format: int32
              region:
                type: string
                description: URL of the region where the operation resides (output
                  only).
              selfLink:
                type: string
                description: Server defined URL for the resource (output only).
              startTime:
                type: string
                description: The time that this operation was started by the server.
                  This is in RFC 3339 format (output only).
              status:
                type: string
                description: 'Status of the operation. Can be one of the following:
                  "PENDING", "RUNNING", or "DONE" (output only).'
                enum:
                - DONE
                - PENDING
                - RUNNING
                enumDescriptions:
                - ''
                - ''
                - ''
              statusMessage:
                type: string
                description: An optional textual description of the current status
                  of the operation (output only).
              targetId:
                type: string
                description: Unique target id which identifies a particular incarnation
                  of the target (output only).
                format: uint64
              targetLink:
                type: string
                description: URL of the resource the operation is mutating (output
                  only).
              user:
                type: string
                description: User who requested the operation, for example "user@example.com"
                  (output only).
              warnings:
                type: array
                description: If warning messages generated during processing of this
                  operation, this field will be populated (output only).
                items:
                  type: object
                  properties:
                    code:
                      type: string
                      description: The warning type identifier for this warning.
                      enum:
                      - DEPRECATED_RESOURCE_USED
                      - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                      - INJECTED_KERNELS_DEPRECATED
                      - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                      - NEXT_HOP_CANNOT_IP_FORWARD
                      - NEXT_HOP_INSTANCE_NOT_FOUND
                      - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                      - NEXT_HOP_NOT_RUNNING
                      - NO_RESULTS_ON_PAGE
                      - REQUIRED_TOS_AGREEMENT
                      - RESOURCE_NOT_DELETED
                      - UNREACHABLE
                      enumDescriptions:
                      - ''
                      - ''
                      - ''
                      - ''
                      - ''
                      - ''
                      - ''
                      - ''
                      - ''
                      - ''
                      - ''
                      - ''
                    data:
                      type: array
                      description: 'Metadata for this warning in ''key: value'' format.'
                      items:
                        type: object
                        properties:
                          key:
                            type: string
                            description: A key for the warning data.
                          value:
                            type: string
                            description: A warning data value corresponding to the
                              key.
                    message:
                      type: string
                      description: Optional human-readable details for this warning.
              zone:
                type: string
                description: URL of the zone where the operation resides (output only).
          OperationAggregatedList:
            id: OperationAggregatedList
            type: object
            properties:
              id:
                type: string
                description: Unique identifier for the resource; defined by the server
                  (output only).
              items:
                type: object
                description: A map of scoped operation lists.
                additionalProperties:
                  $ref: OperationsScopedList
                  description: Name of the scope containing this set of operations.
              kind:
                type: string
                description: Type of resource.
                default: compute#operationAggregatedList
              nextPageToken:
                type: string
                description: A token used to continue a truncated list request (output
                  only).
              selfLink:
                type: string
                description: Server defined URL for this resource (output only).
          OperationList:
            id: OperationList
            type: object
            description: Contains a list of operation resources.
            properties:
              id:
                type: string
                description: Unique identifier for the resource; defined by the server
                  (output only).
              items:
                type: array
                description: The operation resources.
                items:
                  $ref: Operation
              kind:
                type: string
                description: Type of resource.
                default: compute#operationList
              nextPageToken:
                type: string
                description: A token used to continue a truncated list request (output
                  only).
              selfLink:
                type: string
                description: Server defined URL for this resource (output only).
          OperationsScopedList:
            id: OperationsScopedList
            type: object
            properties:
              operations:
                type: array
                description: List of operations contained in this scope.
                items:
                  $ref: Operation
              warning:
                type: object
                description: Informational warning which replaces the list of operations
                  when the list is empty.
                properties:
                  code:
                    type: string
                    description: The warning type identifier for this warning.
                    enum:
                    - DEPRECATED_RESOURCE_USED
                    - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                    - INJECTED_KERNELS_DEPRECATED
                    - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                    - NEXT_HOP_CANNOT_IP_FORWARD
                    - NEXT_HOP_INSTANCE_NOT_FOUND
                    - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                    - NEXT_HOP_NOT_RUNNING
                    - NO_RESULTS_ON_PAGE
                    - REQUIRED_TOS_AGREEMENT
                    - RESOURCE_NOT_DELETED
                    - UNREACHABLE
                    enumDescriptions:
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                  data:
                    type: array
                    description: 'Metadata for this warning in ''key: value'' format.'
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                          description: A key for the warning data.
                        value:
                          type: string
                          description: A warning data value corresponding to the key.
                  message:
                    type: string
                    description: Optional human-readable details for this warning.
          Project:
            id: Project
            type: object
            description: A project resource. Projects can be created only in the APIs
              Console. Unless marked otherwise, values can only be modified in the
              console.
            properties:
              commonInstanceMetadata:
                $ref: Metadata
                description: Metadata key/value pairs available to all instances contained
                  in this project.
              creationTimestamp:
                type: string
                description: Creation timestamp in RFC3339 text format (output only).
              description:
                type: string
                description: An optional textual description of the resource.
              id:
                type: string
                description: Unique identifier for the resource; defined by the server
                  (output only).
                format: uint64
              kind:
                type: string
                description: Type of the resource.
                default: compute#project
              name:
                type: string
                description: Name of the resource.
              quotas:
                type: array
                description: Quotas assigned to this project.
                items:
                  $ref: Quota
              selfLink:
                type: string
                description: Server defined URL for the resource (output only).
          Quota:
            id: Quota
            type: object
            description: A quotas entry.
            properties:
              limit:
                type: number
                description: Quota limit for this metric.
                format: double
              metric:
                type: string
                description: Name of the quota metric.
                enum:
                - CPUS
                - DISKS
                - DISKS_TOTAL_GB
                - EPHEMERAL_ADDRESSES
                - FIREWALLS
                - FORWARDING_RULES
                - HEALTH_CHECKS
                - IMAGES
                - IMAGES_TOTAL_GB
                - INSTANCES
                - IN_USE_ADDRESSES
                - KERNELS
                - KERNELS_TOTAL_GB
                - NETWORKS
                - OPERATIONS
                - ROUTES
                - SNAPSHOTS
                - STATIC_ADDRESSES
                - TARGET_INSTANCES
                - TARGET_POOLS
                enumDescriptions:
                - ''
                - ''
                - ''
                - ''
                - ''
                - ''
                - ''
                - ''
                - ''
                - ''
                - ''
                - ''
                - ''
                - ''
                - ''
                - ''
                - ''
                - ''
                - ''
                - ''
              usage:
                type: number
                description: Current usage of this metric.
                format: double
          Region:
            id: Region
            type: object
            description: Region resource.
            properties:
              creationTimestamp:
                type: string
                description: Creation timestamp in RFC3339 text format (output only).
              deprecated:
                $ref: DeprecationStatus
                description: The deprecation status associated with this region.
              description:
                type: string
                description: Textual description of the resource.
              id:
                type: string
                description: Unique identifier for the resource; defined by the server
                  (output only).
                format: uint64
              kind:
                type: string
                description: Type of the resource.
                default: compute#region
              name:
                type: string
                description: Name of the resource.
              quotas:
                type: array
                description: Quotas assigned to this region.
                items:
                  $ref: Quota
              selfLink:
                type: string
                description: Server defined URL for the resource (output only).
              status:
                type: string
                description: Status of the region, "UP" or "DOWN".
                enum:
                - DOWN
                - UP
                enumDescriptions:
                - ''
                - ''
              zones:
                type: array
                description: A list of zones homed in this region, in the form of
                  resource URLs.
                items:
                  type: string
          RegionList:
            id: RegionList
            type: object
            description: Contains a list of region resources.
            properties:
              id:
                type: string
                description: Unique identifier for the resource; defined by the server
                  (output only).
              items:
                type: array
                description: The region resources.
                items:
                  $ref: Region
              kind:
                type: string
                description: Type of resource.
                default: compute#regionList
              nextPageToken:
                type: string
                description: A token used to continue a truncated list request (output
                  only).
              selfLink:
                type: string
                description: Server defined URL for this resource (output only).
          Route:
            id: Route
            type: object
            description: The route resource. A Route is a rule that specifies how
              certain packets should be handled by the virtual network. Routes are
              associated with VMs by tag and the set of Routes for a particular VM
              is called its routing table. For each packet leaving a VM, the system
              searches that VM's routing table for a single best matching Route. Routes
              match packets by destination IP address, preferring smaller or more
              specific ranges over larger ones. If there is a tie, the system selects
              the Route with the smallest priority value. If there is still a tie,
              it uses the layer three and four packet headers to select just one of
              the remaining matching Routes. The packet is then forwarded as specified
              by the next_hop field of the winning Route -- either to another VM destination,
              a VM gateway or a GCE operated gateway. Packets that do not match any
              Route in the sending VM's routing table will be dropped.
            properties:
              creationTimestamp:
                type: string
                description: Creation timestamp in RFC3339 text format (output only).
              description:
                type: string
                description: An optional textual description of the resource; provided
                  by the client when the resource is created.
              destRange:
                type: string
                description: Which packets does this route apply to?
                annotations:
                  required:
                  - compute.routes.insert
              id:
                type: string
                description: Unique identifier for the resource; defined by the server
                  (output only).
                format: uint64
              kind:
                type: string
                description: Type of the resource.
                default: compute#route
              name:
                type: string
                description: Name of the resource; provided by the client when the
                  resource is created. The name must be 1-63 characters long, and
                  comply with RFC1035.
                pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                annotations:
                  required:
                  - compute.routes.insert
              network:
                type: string
                description: URL of the network to which this route is applied; provided
                  by the client when the route is created.
                annotations:
                  required:
                  - compute.routes.insert
              nextHopGateway:
                type: string
                description: The URL to a gateway that should handle matching packets.
              nextHopInstance:
                type: string
                description: The URL to an instance that should handle matching packets.
              nextHopIp:
                type: string
                description: The network IP address of an instance that should handle
                  matching packets.
              nextHopNetwork:
                type: string
                description: The URL of the local network if it should handle matching
                  packets.
              priority:
                type: integer
                description: Breaks ties between Routes of equal specificity. Routes
                  with smaller values win when tied with routes with larger values.
                format: uint32
                annotations:
                  required:
                  - compute.routes.insert
              selfLink:
                type: string
                description: Server defined URL for the resource (output only).
              tags:
                type: array
                description: A list of instance tags to which this route applies.
                items:
                  type: string
                annotations:
                  required:
                  - compute.routes.insert
              warnings:
                type: array
                description: If potential misconfigurations are detected for this
                  route, this field will be populated with warning messages.
                items:
                  type: object
                  properties:
                    code:
                      type: string
                      description: The warning type identifier for this warning.
                      enum:
                      - DEPRECATED_RESOURCE_USED
                      - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                      - INJECTED_KERNELS_DEPRECATED
                      - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                      - NEXT_HOP_CANNOT_IP_FORWARD
                      - NEXT_HOP_INSTANCE_NOT_FOUND
                      - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                      - NEXT_HOP_NOT_RUNNING
                      - NO_RESULTS_ON_PAGE
                      - REQUIRED_TOS_AGREEMENT
                      - RESOURCE_NOT_DELETED
                      - UNREACHABLE
                      enumDescriptions:
                      - ''
                      - ''
                      - ''
                      - ''
                      - ''
                      - ''
                      - ''
                      - ''
                      - ''
                      - ''
                      - ''
                      - ''
                    data:
                      type: array
                      description: 'Metadata for this warning in ''key: value'' format.'
                      items:
                        type: object
                        properties:
                          key:
                            type: string
                            description: A key for the warning data.
                          value:
                            type: string
                            description: A warning data value corresponding to the
                              key.
                    message:
                      type: string
                      description: Optional human-readable details for this warning.
          RouteList:
            id: RouteList
            type: object
            description: Contains a list of route resources.
            properties:
              id:
                type: string
                description: Unique identifier for the resource; defined by the server
                  (output only).
              items:
                type: array
                description: The route resources.
                items:
                  $ref: Route
              kind:
                type: string
                description: Type of resource.
                default: compute#routeList
              nextPageToken:
                type: string
                description: A token used to continue a truncated list request (output
                  only).
              selfLink:
                type: string
                description: Server defined URL for this resource (output only).
          Scheduling:
            id: Scheduling
            type: object
            description: Scheduling options for an Instance.
            properties:
              automaticRestart:
                type: boolean
                description: Whether the Instance should be automatically restarted
                  whenever it is terminated by Compute Engine (not terminated by user).
              onHostMaintenance:
                type: string
                description: How the instance should behave when the host machine
                  undergoes maintenance that may temporarily impact instance performance.
                enum:
                - MIGRATE
                - TERMINATE
                enumDescriptions:
                - ''
                - ''
          SerialPortOutput:
            id: SerialPortOutput
            type: object
            description: An instance serial console output.
            properties:
              contents:
                type: string
                description: The contents of the console output.
              kind:
                type: string
                description: Type of the resource.
                default: compute#serialPortOutput
              selfLink:
                type: string
                description: Server defined URL for the resource (output only).
          ServiceAccount:
            id: ServiceAccount
            type: object
            description: A service account.
            properties:
              email:
                type: string
                description: Email address of the service account.
              scopes:
                type: array
                description: The list of scopes to be made available for this service
                  account.
                items:
                  type: string
          Snapshot:
            id: Snapshot
            type: object
            description: A persistent disk snapshot resource.
            properties:
              creationTimestamp:
                type: string
                description: Creation timestamp in RFC3339 text format (output only).
              description:
                type: string
                description: An optional textual description of the resource; provided
                  by the client when the resource is created.
              diskSizeGb:
                type: string
                description: Size of the persistent disk snapshot, specified in GB
                  (output only).
                format: int64
              id:
                type: string
                description: Unique identifier for the resource; defined by the server
                  (output only).
                format: uint64
              kind:
                type: string
                description: Type of the resource.
                default: compute#snapshot
              name:
                type: string
                description: Name of the resource; provided by the client when the
                  resource is created. The name must be 1-63 characters long, and
                  comply with RFC1035.
                pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
              selfLink:
                type: string
                description: Server defined URL for the resource (output only).
              sourceDisk:
                type: string
                description: The source disk used to create this snapshot. Once the
                  source disk has been deleted from the system, this field will be
                  cleared, and will not be set even if a disk with the same name has
                  been re-created (output only).
              sourceDiskId:
                type: string
                description: The 'id' value of the disk used to create this snapshot.
                  This value may be used to determine whether the snapshot was taken
                  from the current or a previous instance of a given disk name.
              status:
                type: string
                description: The status of the persistent disk snapshot (output only).
                enum:
                - CREATING
                - DELETING
                - FAILED
                - READY
                - UPLOADING
                enumDescriptions:
                - ''
                - ''
                - ''
                - ''
                - ''
              storageBytes:
                type: string
                description: A size of the the storage used by the snapshot. As snapshots
                  share storage this number is expected to change with snapshot creation/deletion.
                format: int64
              storageBytesStatus:
                type: string
                description: An indicator whether storageBytes is in a stable state,
                  or it is being adjusted as a result of shared storage reallocation.
                enum:
                - UPDATING
                - UP_TO_DATE
                enumDescriptions:
                - ''
                - ''
          SnapshotList:
            id: SnapshotList
            type: object
            description: Contains a list of persistent disk snapshot resources.
            properties:
              id:
                type: string
                description: Unique identifier for the resource; defined by the server
                  (output only).
              items:
                type: array
                description: The persistent snapshot resources.
                items:
                  $ref: Snapshot
              kind:
                type: string
                description: Type of resource.
                default: compute#snapshotList
              nextPageToken:
                type: string
                description: A token used to continue a truncated list request (output
                  only).
              selfLink:
                type: string
                description: Server defined URL for this resource (output only).
          Tags:
            id: Tags
            type: object
            description: A set of instance tags.
            properties:
              fingerprint:
                type: string
                description: Fingerprint of this resource. A hash of the tags stored
                  in this object. This field is used optimistic locking. An up-to-date
                  tags fingerprint must be provided in order to modify tags.
                format: byte
              items:
                type: array
                description: An array of tags. Each tag must be 1-63 characters long,
                  and comply with RFC1035.
                items:
                  type: string
          TargetInstance:
            id: TargetInstance
            type: object
            description: A TargetInstance resource. This resource defines an endpoint
              VM that terminates traffic of certain protocols.
            properties:
              creationTimestamp:
                type: string
                description: Creation timestamp in RFC3339 text format (output only).
              description:
                type: string
                description: An optional textual description of the resource; provided
                  by the client when the resource is created.
              id:
                type: string
                description: Unique identifier for the resource; defined by the server
                  (output only).
                format: uint64
              instance:
                type: string
                description: The URL to the instance that terminates the relevant
                  traffic.
              kind:
                type: string
                description: Type of the resource.
                default: compute#targetInstance
              name:
                type: string
                description: Name of the resource; provided by the client when the
                  resource is created. The name must be 1-63 characters long, and
                  comply with RFC1035.
                pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
              natPolicy:
                type: string
                description: NAT option controlling how IPs are NAT'ed to the VM.
                  Currently only NO_NAT (default value) is supported.
                enum:
                - NO_NAT
                enumDescriptions:
                - ''
              selfLink:
                type: string
                description: Server defined URL for the resource (output only).
              zone:
                type: string
                description: URL of the zone where the target instance resides (output
                  only).
          TargetInstanceAggregatedList:
            id: TargetInstanceAggregatedList
            type: object
            properties:
              id:
                type: string
                description: Unique identifier for the resource; defined by the server
                  (output only).
              items:
                type: object
                description: A map of scoped target instance lists.
                additionalProperties:
                  $ref: TargetInstancesScopedList
                  description: Name of the scope containing this set of target instances.
              kind:
                type: string
                description: Type of resource.
                default: compute#targetInstanceAggregatedList
              nextPageToken:
                type: string
                description: A token used to continue a truncated list request (output
                  only).
              selfLink:
                type: string
                description: Server defined URL for this resource (output only).
          TargetInstanceList:
            id: TargetInstanceList
            type: object
            description: Contains a list of TargetInstance resources.
            properties:
              id:
                type: string
                description: Unique identifier for the resource; defined by the server
                  (output only).
              items:
                type: array
                description: The TargetInstance resources.
                items:
                  $ref: TargetInstance
              kind:
                type: string
                description: Type of resource.
                default: compute#targetInstanceList
              nextPageToken:
                type: string
                description: A token used to continue a truncated list request (output
                  only).
              selfLink:
                type: string
                description: Server defined URL for this resource (output only).
          TargetInstancesScopedList:
            id: TargetInstancesScopedList
            type: object
            properties:
              targetInstances:
                type: array
                description: List of target instances contained in this scope.
                items:
                  $ref: TargetInstance
              warning:
                type: object
                description: Informational warning which replaces the list of addresses
                  when the list is empty.
                properties:
                  code:
                    type: string
                    description: The warning type identifier for this warning.
                    enum:
                    - DEPRECATED_RESOURCE_USED
                    - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                    - INJECTED_KERNELS_DEPRECATED
                    - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                    - NEXT_HOP_CANNOT_IP_FORWARD
                    - NEXT_HOP_INSTANCE_NOT_FOUND
                    - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                    - NEXT_HOP_NOT_RUNNING
                    - NO_RESULTS_ON_PAGE
                    - REQUIRED_TOS_AGREEMENT
                    - RESOURCE_NOT_DELETED
                    - UNREACHABLE
                    enumDescriptions:
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                  data:
                    type: array
                    description: 'Metadata for this warning in ''key: value'' format.'
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                          description: A key for the warning data.
                        value:
                          type: string
                          description: A warning data value corresponding to the key.
                  message:
                    type: string
                    description: Optional human-readable details for this warning.
          TargetPool:
            id: TargetPool
            type: object
            description: A TargetPool resource. This resource defines a pool of VMs,
              associated HttpHealthCheck resources, and the fallback TargetPool.
            properties:
              backupPool:
                type: string
                description: |-
                  This field is applicable only when the containing target pool is serving a forwarding rule as the primary pool, and its 'failoverRatio' field is properly set to a value between [0, 1].

                  'backupPool' and 'failoverRatio' together define the fallback behavior of the primary target pool: if the ratio of the healthy VMs in the primary pool is at or below 'failoverRatio', traffic arriving at the load-balanced IP will be directed to the backup pool.

                  In case where 'failoverRatio' and 'backupPool' are not set, or all the VMs in the backup pool are unhealthy, the traffic will be directed back to the primary pool in the "force" mode, where traffic will be spread to the healthy VMs with the best effort, or to all VMs when no VM is healthy.
              creationTimestamp:
                type: string
                description: Creation timestamp in RFC3339 text format (output only).
              description:
                type: string
                description: An optional textual description of the resource; provided
                  by the client when the resource is created.
              failoverRatio:
                type: number
                description: |-
                  This field is applicable only when the containing target pool is serving a forwarding rule as the primary pool (i.e., not as a backup pool to some other target pool). The value of the field must be in [0, 1].

                  If set, 'backupPool' must also be set. They together define the fallback behavior of the primary target pool: if the ratio of the healthy VMs in the primary pool is at or below this number, traffic arriving at the load-balanced IP will be directed to the backup pool.

                  In case where 'failoverRatio' is not set or all the VMs in the backup pool are unhealthy, the traffic will be directed back to the primary pool in the "force" mode, where traffic will be spread to the healthy VMs with the best effort, or to all VMs when no VM is healthy.
                format: float
              healthChecks:
                type: array
                description: A list of URLs to the HttpHealthCheck resource. A member
                  VM in this pool is considered healthy if and only if all specified
                  health checks pass. An empty list means all member VMs will be considered
                  healthy at all times.
                items:
                  type: string
              id:
                type: string
                description: Unique identifier for the resource; defined by the server
                  (output only).
                format: uint64
              instances:
                type: array
                description: A list of resource URLs to the member VMs serving this
                  pool. They must live in zones contained in the same region as this
                  pool.
                items:
                  type: string
              kind:
                type: string
                description: Type of the resource.
                default: compute#targetPool
              name:
                type: string
                description: Name of the resource; provided by the client when the
                  resource is created. The name must be 1-63 characters long, and
                  comply with RFC1035.
                pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
              region:
                type: string
                description: URL of the region where the target pool resides (output
                  only).
              selfLink:
                type: string
                description: Server defined URL for the resource (output only).
              sessionAffinity:
                type: string
                description: 'Sesssion affinity option, must be one of the following
                  values: ''NONE'': Connections from the same client IP may go to
                  any VM in the pool; ''CLIENT_IP'': Connections from the same client
                  IP will go to the same VM in the pool while that VM remains healthy.
                  ''CLIENT_IP_PROTO'': Connections from the same client IP with the
                  same IP protocol will go to the same VM in the pool while that VM
                  remains healthy.'
                enum:
                - CLIENT_IP
                - CLIENT_IP_PROTO
                - NONE
                enumDescriptions:
                - ''
                - ''
                - ''
          TargetPoolAggregatedList:
            id: TargetPoolAggregatedList
            type: object
            properties:
              id:
                type: string
                description: Unique identifier for the resource; defined by the server
                  (output only).
              items:
                type: object
                description: A map of scoped target pool lists.
                additionalProperties:
                  $ref: TargetPoolsScopedList
                  description: Name of the scope containing this set of target pools.
              kind:
                type: string
                description: Type of resource.
                default: compute#targetPoolAggregatedList
              nextPageToken:
                type: string
                description: A token used to continue a truncated list request (output
                  only).
              selfLink:
                type: string
                description: Server defined URL for this resource (output only).
          TargetPoolInstanceHealth:
            id: TargetPoolInstanceHealth
            type: object
            properties:
              healthStatus:
                type: array
                items:
                  $ref: HealthStatus
              kind:
                type: string
                description: Type of resource.
                default: compute#targetPoolInstanceHealth
          TargetPoolList:
            id: TargetPoolList
            type: object
            description: Contains a list of TargetPool resources.
            properties:
              id:
                type: string
                description: Unique identifier for the resource; defined by the server
                  (output only).
              items:
                type: array
                description: The TargetPool resources.
                items:
                  $ref: TargetPool
              kind:
                type: string
                description: Type of resource.
                default: compute#targetPoolList
              nextPageToken:
                type: string
                description: A token used to continue a truncated list request (output
                  only).
              selfLink:
                type: string
                description: Server defined URL for this resource (output only).
          TargetPoolsAddHealthCheckRequest:
            id: TargetPoolsAddHealthCheckRequest
            type: object
            properties:
              healthChecks:
                type: array
                description: Health check URLs to be added to targetPool.
                items:
                  $ref: HealthCheckReference
          TargetPoolsAddInstanceRequest:
            id: TargetPoolsAddInstanceRequest
            type: object
            properties:
              instances:
                type: array
                description: URLs of the instances to be added to targetPool.
                items:
                  $ref: InstanceReference
          TargetPoolsRemoveHealthCheckRequest:
            id: TargetPoolsRemoveHealthCheckRequest
            type: object
            properties:
              healthChecks:
                type: array
                description: Health check URLs to be removed from targetPool.
                items:
                  $ref: HealthCheckReference
          TargetPoolsRemoveInstanceRequest:
            id: TargetPoolsRemoveInstanceRequest
            type: object
            properties:
              instances:
                type: array
                description: URLs of the instances to be removed from targetPool.
                items:
                  $ref: InstanceReference
          TargetPoolsScopedList:
            id: TargetPoolsScopedList
            type: object
            properties:
              targetPools:
                type: array
                description: List of target pools contained in this scope.
                items:
                  $ref: TargetPool
              warning:
                type: object
                description: Informational warning which replaces the list of addresses
                  when the list is empty.
                properties:
                  code:
                    type: string
                    description: The warning type identifier for this warning.
                    enum:
                    - DEPRECATED_RESOURCE_USED
                    - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                    - INJECTED_KERNELS_DEPRECATED
                    - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                    - NEXT_HOP_CANNOT_IP_FORWARD
                    - NEXT_HOP_INSTANCE_NOT_FOUND
                    - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                    - NEXT_HOP_NOT_RUNNING
                    - NO_RESULTS_ON_PAGE
                    - REQUIRED_TOS_AGREEMENT
                    - RESOURCE_NOT_DELETED
                    - UNREACHABLE
                    enumDescriptions:
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                    - ''
                  data:
                    type: array
                    description: 'Metadata for this warning in ''key: value'' format.'
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                          description: A key for the warning data.
                        value:
                          type: string
                          description: A warning data value corresponding to the key.
                  message:
                    type: string
                    description: Optional human-readable details for this warning.
          TargetReference:
            id: TargetReference
            type: object
            properties:
              target:
                type: string
          Zone:
            id: Zone
            type: object
            description: A zone resource.
            properties:
              creationTimestamp:
                type: string
                description: Creation timestamp in RFC3339 text format (output only).
              deprecated:
                $ref: DeprecationStatus
                description: The deprecation status associated with this zone.
              description:
                type: string
                description: Textual description of the resource.
              id:
                type: string
                description: Unique identifier for the resource; defined by the server
                  (output only).
                format: uint64
              kind:
                type: string
                description: Type of the resource.
                default: compute#zone
              maintenanceWindows:
                type: array
                description: Scheduled maintenance windows for the zone. When the
                  zone is in a maintenance window, all resources which reside in the
                  zone will be unavailable.
                items:
                  type: object
                  properties:
                    beginTime:
                      type: string
                      description: Begin time of the maintenance window, in RFC 3339
                        format.
                    description:
                      type: string
                      description: Textual description of the maintenance window.
                    endTime:
                      type: string
                      description: End time of the maintenance window, in RFC 3339
                        format.
                    name:
                      type: string
                      description: Name of the maintenance window.
              name:
                type: string
                description: Name of the resource.
              region:
                type: string
                description: Full URL reference to the region which hosts the zone
                  (output only).
              selfLink:
                type: string
                description: Server defined URL for the resource (output only).
              status:
                type: string
                description: Status of the zone. "UP" or "DOWN".
                enum:
                - DOWN
                - UP
                enumDescriptions:
                - ''
                - ''
          ZoneList:
            id: ZoneList
            type: object
            description: Contains a list of zone resources.
            properties:
              id:
                type: string
                description: Unique identifier for the resource; defined by the server
                  (output only).
              items:
                type: array
                description: The zone resources.
                items:
                  $ref: Zone
              kind:
                type: string
                description: Type of resource.
                default: compute#zoneList
              nextPageToken:
                type: string
                description: A token used to continue a truncated list request (output
                  only).
              selfLink:
                type: string
                description: Server defined URL for this resource (output only).
        resources:
          addresses: &4
            methods:
              aggregatedList: &5
                id: compute.addresses.aggregatedList
                path: '{project}/aggregated/addresses'
                httpMethod: GET
                description: Retrieves the list of addresses grouped by scope.
                parameters:
                  filter:
                    type: string
                    description: Optional. Filter expression for filtering listed
                      resources.
                    location: query
                  maxResults:
                    type: integer
                    description: Optional. Maximum count of results to be returned.
                      Maximum value is 500 and default value is 500.
                    default: '500'
                    format: uint32
                    minimum: '0'
                    maximum: '500'
                    location: query
                  pageToken:
                    type: string
                    description: Optional. Tag returned by a previous list request
                      truncated by maxResults. Used to continue a previous list request.
                    location: query
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                parameterOrder:
                - project
                response:
                  $ref: AddressAggregatedList
                scopes:
                - https://www.googleapis.com/auth/compute
                - https://www.googleapis.com/auth/compute.readonly
              delete: &6
                id: compute.addresses.delete
                path: '{project}/regions/{region}/addresses/{address}'
                httpMethod: DELETE
                description: Deletes the specified address resource.
                parameters:
                  address:
                    type: string
                    description: Name of the address resource to delete.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  region:
                    type: string
                    description: Name of the region scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - region
                - address
                response:
                  $ref: Operation
                scopes:
                - https://www.googleapis.com/auth/compute
              get: &7
                id: compute.addresses.get
                path: '{project}/regions/{region}/addresses/{address}'
                httpMethod: GET
                description: Returns the specified address resource.
                parameters:
                  address:
                    type: string
                    description: Name of the address resource to return.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  region:
                    type: string
                    description: Name of the region scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - region
                - address
                response:
                  $ref: Address
                scopes:
                - https://www.googleapis.com/auth/compute
                - https://www.googleapis.com/auth/compute.readonly
              insert: &8
                id: compute.addresses.insert
                path: '{project}/regions/{region}/addresses'
                httpMethod: POST
                description: Creates an address resource in the specified project
                  using the data included in the request.
                parameters:
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  region:
                    type: string
                    description: Name of the region scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - region
                request:
                  $ref: Address
                response:
                  $ref: Operation
                scopes:
                - https://www.googleapis.com/auth/compute
              list: &9
                id: compute.addresses.list
                path: '{project}/regions/{region}/addresses'
                httpMethod: GET
                description: Retrieves the list of address resources contained within
                  the specified region.
                parameters:
                  filter:
                    type: string
                    description: Optional. Filter expression for filtering listed
                      resources.
                    location: query
                  maxResults:
                    type: integer
                    description: Optional. Maximum count of results to be returned.
                      Maximum value is 500 and default value is 500.
                    default: '500'
                    format: uint32
                    minimum: '0'
                    maximum: '500'
                    location: query
                  pageToken:
                    type: string
                    description: Optional. Tag returned by a previous list request
                      truncated by maxResults. Used to continue a previous list request.
                    location: query
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  region:
                    type: string
                    description: Name of the region scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - region
                response:
                  $ref: AddressList
                scopes:
                - https://www.googleapis.com/auth/compute
                - https://www.googleapis.com/auth/compute.readonly
          disks: &10
            methods:
              aggregatedList: &11
                id: compute.disks.aggregatedList
                path: '{project}/aggregated/disks'
                httpMethod: GET
                description: Retrieves the list of disks grouped by scope.
                parameters:
                  filter:
                    type: string
                    description: Optional. Filter expression for filtering listed
                      resources.
                    location: query
                  maxResults:
                    type: integer
                    description: Optional. Maximum count of results to be returned.
                      Maximum value is 500 and default value is 500.
                    default: '500'
                    format: uint32
                    minimum: '0'
                    maximum: '500'
                    location: query
                  pageToken:
                    type: string
                    description: Optional. Tag returned by a previous list request
                      truncated by maxResults. Used to continue a previous list request.
                    location: query
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                parameterOrder:
                - project
                response:
                  $ref: DiskAggregatedList
                scopes:
                - https://www.googleapis.com/auth/compute
                - https://www.googleapis.com/auth/compute.readonly
              createSnapshot: &12
                id: compute.disks.createSnapshot
                path: '{project}/zones/{zone}/disks/{disk}/createSnapshot'
                httpMethod: POST
                parameters:
                  disk:
                    type: string
                    description: Name of the persistent disk resource to snapshot.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  zone:
                    type: string
                    description: Name of the zone scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - zone
                - disk
                request:
                  $ref: Snapshot
                response:
                  $ref: Operation
                scopes:
                - https://www.googleapis.com/auth/compute
              delete: &13
                id: compute.disks.delete
                path: '{project}/zones/{zone}/disks/{disk}'
                httpMethod: DELETE
                description: Deletes the specified persistent disk resource.
                parameters:
                  disk:
                    type: string
                    description: Name of the persistent disk resource to delete.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  zone:
                    type: string
                    description: Name of the zone scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - zone
                - disk
                response:
                  $ref: Operation
                scopes:
                - https://www.googleapis.com/auth/compute
              get: &14
                id: compute.disks.get
                path: '{project}/zones/{zone}/disks/{disk}'
                httpMethod: GET
                description: Returns the specified persistent disk resource.
                parameters:
                  disk:
                    type: string
                    description: Name of the persistent disk resource to return.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  zone:
                    type: string
                    description: Name of the zone scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - zone
                - disk
                response:
                  $ref: Disk
                scopes:
                - https://www.googleapis.com/auth/compute
                - https://www.googleapis.com/auth/compute.readonly
              insert: &15
                id: compute.disks.insert
                path: '{project}/zones/{zone}/disks'
                httpMethod: POST
                description: Creates a persistent disk resource in the specified project
                  using the data included in the request.
                parameters:
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  sourceImage:
                    type: string
                    description: Optional. Source image to restore onto a disk.
                    location: query
                  zone:
                    type: string
                    description: Name of the zone scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - zone
                request:
                  $ref: Disk
                response:
                  $ref: Operation
                scopes:
                - https://www.googleapis.com/auth/compute
              list: &16
                id: compute.disks.list
                path: '{project}/zones/{zone}/disks'
                httpMethod: GET
                description: Retrieves the list of persistent disk resources contained
                  within the specified zone.
                parameters:
                  filter:
                    type: string
                    description: Optional. Filter expression for filtering listed
                      resources.
                    location: query
                  maxResults:
                    type: integer
                    description: Optional. Maximum count of results to be returned.
                      Maximum value is 500 and default value is 500.
                    default: '500'
                    format: uint32
                    minimum: '0'
                    maximum: '500'
                    location: query
                  pageToken:
                    type: string
                    description: Optional. Tag returned by a previous list request
                      truncated by maxResults. Used to continue a previous list request.
                    location: query
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  zone:
                    type: string
                    description: Name of the zone scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - zone
                response:
                  $ref: DiskList
                scopes:
                - https://www.googleapis.com/auth/compute
                - https://www.googleapis.com/auth/compute.readonly
          firewalls: &17
            methods:
              delete: &18
                id: compute.firewalls.delete
                path: '{project}/global/firewalls/{firewall}'
                httpMethod: DELETE
                description: Deletes the specified firewall resource.
                parameters:
                  firewall:
                    type: string
                    description: Name of the firewall resource to delete.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                parameterOrder:
                - project
                - firewall
                response:
                  $ref: Operation
                scopes:
                - https://www.googleapis.com/auth/compute
              get: &19
                id: compute.firewalls.get
                path: '{project}/global/firewalls/{firewall}'
                httpMethod: GET
                description: Returns the specified firewall resource.
                parameters:
                  firewall:
                    type: string
                    description: Name of the firewall resource to return.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                parameterOrder:
                - project
                - firewall
                response:
                  $ref: Firewall
                scopes:
                - https://www.googleapis.com/auth/compute
                - https://www.googleapis.com/auth/compute.readonly
              insert: &20
                id: compute.firewalls.insert
                path: '{project}/global/firewalls'
                httpMethod: POST
                description: Creates a firewall resource in the specified project
                  using the data included in the request.
                parameters:
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                parameterOrder:
                - project
                request:
                  $ref: Firewall
                response:
                  $ref: Operation
                scopes:
                - https://www.googleapis.com/auth/compute
              list: &21
                id: compute.firewalls.list
                path: '{project}/global/firewalls'
                httpMethod: GET
                description: Retrieves the list of firewall resources available to
                  the specified project.
                parameters:
                  filter:
                    type: string
                    description: Optional. Filter expression for filtering listed
                      resources.
                    location: query
                  maxResults:
                    type: integer
                    description: Optional. Maximum count of results to be returned.
                      Maximum value is 500 and default value is 500.
                    default: '500'
                    format: uint32
                    minimum: '0'
                    maximum: '500'
                    location: query
                  pageToken:
                    type: string
                    description: Optional. Tag returned by a previous list request
                      truncated by maxResults. Used to continue a previous list request.
                    location: query
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                parameterOrder:
                - project
                response:
                  $ref: FirewallList
                scopes:
                - https://www.googleapis.com/auth/compute
                - https://www.googleapis.com/auth/compute.readonly
              patch: &22
                id: compute.firewalls.patch
                path: '{project}/global/firewalls/{firewall}'
                httpMethod: PATCH
                description: Updates the specified firewall resource with the data
                  included in the request. This method supports patch semantics.
                parameters:
                  firewall:
                    type: string
                    description: Name of the firewall resource to update.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                parameterOrder:
                - project
                - firewall
                request:
                  $ref: Firewall
                response:
                  $ref: Operation
                scopes:
                - https://www.googleapis.com/auth/compute
              update: &23
                id: compute.firewalls.update
                path: '{project}/global/firewalls/{firewall}'
                httpMethod: PUT
                description: Updates the specified firewall resource with the data
                  included in the request.
                parameters:
                  firewall:
                    type: string
                    description: Name of the firewall resource to update.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                parameterOrder:
                - project
                - firewall
                request:
                  $ref: Firewall
                response:
                  $ref: Operation
                scopes:
                - https://www.googleapis.com/auth/compute
          forwardingRules: &24
            methods:
              aggregatedList: &25
                id: compute.forwardingRules.aggregatedList
                path: '{project}/aggregated/forwardingRules'
                httpMethod: GET
                description: Retrieves the list of forwarding rules grouped by scope.
                parameters:
                  filter:
                    type: string
                    description: Optional. Filter expression for filtering listed
                      resources.
                    location: query
                  maxResults:
                    type: integer
                    description: Optional. Maximum count of results to be returned.
                      Maximum value is 500 and default value is 500.
                    default: '500'
                    format: uint32
                    minimum: '0'
                    maximum: '500'
                    location: query
                  pageToken:
                    type: string
                    description: Optional. Tag returned by a previous list request
                      truncated by maxResults. Used to continue a previous list request.
                    location: query
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                parameterOrder:
                - project
                response:
                  $ref: ForwardingRuleAggregatedList
                scopes:
                - https://www.googleapis.com/auth/compute
                - https://www.googleapis.com/auth/compute.readonly
              delete: &26
                id: compute.forwardingRules.delete
                path: '{project}/regions/{region}/forwardingRules/{forwardingRule}'
                httpMethod: DELETE
                description: Deletes the specified ForwardingRule resource.
                parameters:
                  forwardingRule:
                    type: string
                    description: Name of the ForwardingRule resource to delete.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  region:
                    type: string
                    description: Name of the region scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - region
                - forwardingRule
                response:
                  $ref: Operation
                scopes:
                - https://www.googleapis.com/auth/compute
              get: &27
                id: compute.forwardingRules.get
                path: '{project}/regions/{region}/forwardingRules/{forwardingRule}'
                httpMethod: GET
                description: Returns the specified ForwardingRule resource.
                parameters:
                  forwardingRule:
                    type: string
                    description: Name of the ForwardingRule resource to return.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  region:
                    type: string
                    description: Name of the region scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - region
                - forwardingRule
                response:
                  $ref: ForwardingRule
                scopes:
                - https://www.googleapis.com/auth/compute
                - https://www.googleapis.com/auth/compute.readonly
              insert: &28
                id: compute.forwardingRules.insert
                path: '{project}/regions/{region}/forwardingRules'
                httpMethod: POST
                description: Creates a ForwardingRule resource in the specified project
                  and region using the data included in the request.
                parameters:
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  region:
                    type: string
                    description: Name of the region scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - region
                request:
                  $ref: ForwardingRule
                response:
                  $ref: Operation
                scopes:
                - https://www.googleapis.com/auth/compute
              list: &29
                id: compute.forwardingRules.list
                path: '{project}/regions/{region}/forwardingRules'
                httpMethod: GET
                description: Retrieves the list of ForwardingRule resources available
                  to the specified project and region.
                parameters:
                  filter:
                    type: string
                    description: Optional. Filter expression for filtering listed
                      resources.
                    location: query
                  maxResults:
                    type: integer
                    description: Optional. Maximum count of results to be returned.
                      Maximum value is 500 and default value is 500.
                    default: '500'
                    format: uint32
                    minimum: '0'
                    maximum: '500'
                    location: query
                  pageToken:
                    type: string
                    description: Optional. Tag returned by a previous list request
                      truncated by maxResults. Used to continue a previous list request.
                    location: query
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  region:
                    type: string
                    description: Name of the region scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - region
                response:
                  $ref: ForwardingRuleList
                scopes:
                - https://www.googleapis.com/auth/compute
                - https://www.googleapis.com/auth/compute.readonly
              setTarget: &30
                id: compute.forwardingRules.setTarget
                path: '{project}/regions/{region}/forwardingRules/{forwardingRule}/setTarget'
                httpMethod: POST
                description: Changes target url for forwarding rule.
                parameters:
                  forwardingRule:
                    type: string
                    description: Name of the ForwardingRule resource in which target
                      is to be set.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  region:
                    type: string
                    description: Name of the region scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - region
                - forwardingRule
                request:
                  $ref: TargetReference
                response:
                  $ref: Operation
                scopes:
                - https://www.googleapis.com/auth/compute
          globalOperations: &31
            methods:
              aggregatedList: &32
                id: compute.globalOperations.aggregatedList
                path: '{project}/aggregated/operations'
                httpMethod: GET
                description: Retrieves the list of all operations grouped by scope.
                parameters:
                  filter:
                    type: string
                    description: Optional. Filter expression for filtering listed
                      resources.
                    location: query
                  maxResults:
                    type: integer
                    description: Optional. Maximum count of results to be returned.
                      Maximum value is 500 and default value is 500.
                    default: '500'
                    format: uint32
                    minimum: '0'
                    maximum: '500'
                    location: query
                  pageToken:
                    type: string
                    description: Optional. Tag returned by a previous list request
                      truncated by maxResults. Used to continue a previous list request.
                    location: query
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                parameterOrder:
                - project
                response:
                  $ref: OperationAggregatedList
                scopes:
                - https://www.googleapis.com/auth/compute
                - https://www.googleapis.com/auth/compute.readonly
              delete: &33
                id: compute.globalOperations.delete
                path: '{project}/global/operations/{operation}'
                httpMethod: DELETE
                description: Deletes the specified operation resource.
                parameters:
                  operation:
                    type: string
                    description: Name of the operation resource to delete.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                parameterOrder:
                - project
                - operation
                scopes:
                - https://www.googleapis.com/auth/compute
              get: &34
                id: compute.globalOperations.get
                path: '{project}/global/operations/{operation}'
                httpMethod: GET
                description: Retrieves the specified operation resource.
                parameters:
                  operation:
                    type: string
                    description: Name of the operation resource to return.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                parameterOrder:
                - project
                - operation
                response:
                  $ref: Operation
                scopes:
                - https://www.googleapis.com/auth/compute
                - https://www.googleapis.com/auth/compute.readonly
              list: &35
                id: compute.globalOperations.list
                path: '{project}/global/operations'
                httpMethod: GET
                description: Retrieves the list of operation resources contained within
                  the specified project.
                parameters:
                  filter:
                    type: string
                    description: Optional. Filter expression for filtering listed
                      resources.
                    location: query
                  maxResults:
                    type: integer
                    description: Optional. Maximum count of results to be returned.
                      Maximum value is 500 and default value is 500.
                    default: '500'
                    format: uint32
                    minimum: '0'
                    maximum: '500'
                    location: query
                  pageToken:
                    type: string
                    description: Optional. Tag returned by a previous list request
                      truncated by maxResults. Used to continue a previous list request.
                    location: query
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                parameterOrder:
                - project
                response:
                  $ref: OperationList
                scopes:
                - https://www.googleapis.com/auth/compute
                - https://www.googleapis.com/auth/compute.readonly
          httpHealthChecks: &36
            methods:
              delete: &37
                id: compute.httpHealthChecks.delete
                path: '{project}/global/httpHealthChecks/{httpHealthCheck}'
                httpMethod: DELETE
                description: Deletes the specified HttpHealthCheck resource.
                parameters:
                  httpHealthCheck:
                    type: string
                    description: Name of the HttpHealthCheck resource to delete.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                parameterOrder:
                - project
                - httpHealthCheck
                response:
                  $ref: Operation
                scopes:
                - https://www.googleapis.com/auth/compute
              get: &38
                id: compute.httpHealthChecks.get
                path: '{project}/global/httpHealthChecks/{httpHealthCheck}'
                httpMethod: GET
                description: Returns the specified HttpHealthCheck resource.
                parameters:
                  httpHealthCheck:
                    type: string
                    description: Name of the HttpHealthCheck resource to return.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                parameterOrder:
                - project
                - httpHealthCheck
                response:
                  $ref: HttpHealthCheck
                scopes:
                - https://www.googleapis.com/auth/compute
                - https://www.googleapis.com/auth/compute.readonly
              insert: &39
                id: compute.httpHealthChecks.insert
                path: '{project}/global/httpHealthChecks'
                httpMethod: POST
                description: Creates a HttpHealthCheck resource in the specified project
                  using the data included in the request.
                parameters:
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                parameterOrder:
                - project
                request:
                  $ref: HttpHealthCheck
                response:
                  $ref: Operation
                scopes:
                - https://www.googleapis.com/auth/compute
              list: &40
                id: compute.httpHealthChecks.list
                path: '{project}/global/httpHealthChecks'
                httpMethod: GET
                description: Retrieves the list of HttpHealthCheck resources available
                  to the specified project.
                parameters:
                  filter:
                    type: string
                    description: Optional. Filter expression for filtering listed
                      resources.
                    location: query
                  maxResults:
                    type: integer
                    description: Optional. Maximum count of results to be returned.
                      Maximum value is 500 and default value is 500.
                    default: '500'
                    format: uint32
                    minimum: '0'
                    maximum: '500'
                    location: query
                  pageToken:
                    type: string
                    description: Optional. Tag returned by a previous list request
                      truncated by maxResults. Used to continue a previous list request.
                    location: query
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                parameterOrder:
                - project
                response:
                  $ref: HttpHealthCheckList
                scopes:
                - https://www.googleapis.com/auth/compute
                - https://www.googleapis.com/auth/compute.readonly
              patch: &41
                id: compute.httpHealthChecks.patch
                path: '{project}/global/httpHealthChecks/{httpHealthCheck}'
                httpMethod: PATCH
                description: Updates a HttpHealthCheck resource in the specified project
                  using the data included in the request. This method supports patch
                  semantics.
                parameters:
                  httpHealthCheck:
                    type: string
                    description: Name of the HttpHealthCheck resource to update.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                parameterOrder:
                - project
                - httpHealthCheck
                request:
                  $ref: HttpHealthCheck
                response:
                  $ref: Operation
                scopes:
                - https://www.googleapis.com/auth/compute
              update: &42
                id: compute.httpHealthChecks.update
                path: '{project}/global/httpHealthChecks/{httpHealthCheck}'
                httpMethod: PUT
                description: Updates a HttpHealthCheck resource in the specified project
                  using the data included in the request.
                parameters:
                  httpHealthCheck:
                    type: string
                    description: Name of the HttpHealthCheck resource to update.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                parameterOrder:
                - project
                - httpHealthCheck
                request:
                  $ref: HttpHealthCheck
                response:
                  $ref: Operation
                scopes:
                - https://www.googleapis.com/auth/compute
          images: &43
            methods:
              delete: &44
                id: compute.images.delete
                path: '{project}/global/images/{image}'
                httpMethod: DELETE
                description: Deletes the specified image resource.
                parameters:
                  image:
                    type: string
                    description: Name of the image resource to delete.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                parameterOrder:
                - project
                - image
                response:
                  $ref: Operation
                scopes:
                - https://www.googleapis.com/auth/compute
              deprecate: &45
                id: compute.images.deprecate
                path: '{project}/global/images/{image}/deprecate'
                httpMethod: POST
                description: Sets the deprecation status of an image. If no message
                  body is given, clears the deprecation status instead.
                parameters:
                  image:
                    type: string
                    description: Image name.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                parameterOrder:
                - project
                - image
                request:
                  $ref: DeprecationStatus
                response:
                  $ref: Operation
                scopes:
                - https://www.googleapis.com/auth/compute
              get: &46
                id: compute.images.get
                path: '{project}/global/images/{image}'
                httpMethod: GET
                description: Returns the specified image resource.
                parameters:
                  image:
                    type: string
                    description: Name of the image resource to return.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                parameterOrder:
                - project
                - image
                response:
                  $ref: Image
                scopes:
                - https://www.googleapis.com/auth/compute
                - https://www.googleapis.com/auth/compute.readonly
              insert: &47
                id: compute.images.insert
                path: '{project}/global/images'
                httpMethod: POST
                description: Creates an image resource in the specified project using
                  the data included in the request.
                parameters:
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                parameterOrder:
                - project
                request:
                  $ref: Image
                response:
                  $ref: Operation
                scopes:
                - https://www.googleapis.com/auth/compute
                - https://www.googleapis.com/auth/devstorage.full_control
                - https://www.googleapis.com/auth/devstorage.read_only
                - https://www.googleapis.com/auth/devstorage.read_write
              list: &48
                id: compute.images.list
                path: '{project}/global/images'
                httpMethod: GET
                description: Retrieves the list of image resources available to the
                  specified project.
                parameters:
                  filter:
                    type: string
                    description: Optional. Filter expression for filtering listed
                      resources.
                    location: query
                  maxResults:
                    type: integer
                    description: Optional. Maximum count of results to be returned.
                      Maximum value is 500 and default value is 500.
                    default: '500'
                    format: uint32
                    minimum: '0'
                    maximum: '500'
                    location: query
                  pageToken:
                    type: string
                    description: Optional. Tag returned by a previous list request
                      truncated by maxResults. Used to continue a previous list request.
                    location: query
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                parameterOrder:
                - project
                response:
                  $ref: ImageList
                scopes:
                - https://www.googleapis.com/auth/compute
                - https://www.googleapis.com/auth/compute.readonly
          instances: &49
            methods:
              addAccessConfig: &50
                id: compute.instances.addAccessConfig
                path: '{project}/zones/{zone}/instances/{instance}/addAccessConfig'
                httpMethod: POST
                description: Adds an access config to an instance's network interface.
                parameters:
                  instance:
                    type: string
                    description: Instance name.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                  networkInterface:
                    type: string
                    description: Network interface name.
                    required: true
                    location: query
                  project:
                    type: string
                    description: Project name.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  zone:
                    type: string
                    description: Name of the zone scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - zone
                - instance
                - networkInterface
                request:
                  $ref: AccessConfig
                response:
                  $ref: Operation
                scopes:
                - https://www.googleapis.com/auth/compute
              aggregatedList: &51
                id: compute.instances.aggregatedList
                path: '{project}/aggregated/instances'
                httpMethod: GET
                parameters:
                  filter:
                    type: string
                    description: Optional. Filter expression for filtering listed
                      resources.
                    location: query
                  maxResults:
                    type: integer
                    description: Optional. Maximum count of results to be returned.
                      Maximum value is 500 and default value is 500.
                    default: '500'
                    format: uint32
                    minimum: '0'
                    maximum: '500'
                    location: query
                  pageToken:
                    type: string
                    description: Optional. Tag returned by a previous list request
                      truncated by maxResults. Used to continue a previous list request.
                    location: query
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                parameterOrder:
                - project
                response:
                  $ref: InstanceAggregatedList
                scopes:
                - https://www.googleapis.com/auth/compute
                - https://www.googleapis.com/auth/compute.readonly
              attachDisk: &52
                id: compute.instances.attachDisk
                path: '{project}/zones/{zone}/instances/{instance}/attachDisk'
                httpMethod: POST
                description: Attaches a disk resource to an instance.
                parameters:
                  instance:
                    type: string
                    description: Instance name.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                  project:
                    type: string
                    description: Project name.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  zone:
                    type: string
                    description: Name of the zone scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - zone
                - instance
                request:
                  $ref: AttachedDisk
                response:
                  $ref: Operation
                scopes:
                - https://www.googleapis.com/auth/compute
              delete: &53
                id: compute.instances.delete
                path: '{project}/zones/{zone}/instances/{instance}'
                httpMethod: DELETE
                description: Deletes the specified instance resource.
                parameters:
                  instance:
                    type: string
                    description: Name of the instance resource to delete.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  zone:
                    type: string
                    description: Name of the zone scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - zone
                - instance
                response:
                  $ref: Operation
                scopes:
                - https://www.googleapis.com/auth/compute
              deleteAccessConfig: &54
                id: compute.instances.deleteAccessConfig
                path: '{project}/zones/{zone}/instances/{instance}/deleteAccessConfig'
                httpMethod: POST
                description: Deletes an access config from an instance's network interface.
                parameters:
                  accessConfig:
                    type: string
                    description: Access config name.
                    required: true
                    location: query
                  instance:
                    type: string
                    description: Instance name.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                  networkInterface:
                    type: string
                    description: Network interface name.
                    required: true
                    location: query
                  project:
                    type: string
                    description: Project name.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  zone:
                    type: string
                    description: Name of the zone scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - zone
                - instance
                - accessConfig
                - networkInterface
                response:
                  $ref: Operation
                scopes:
                - https://www.googleapis.com/auth/compute
              detachDisk: &55
                id: compute.instances.detachDisk
                path: '{project}/zones/{zone}/instances/{instance}/detachDisk'
                httpMethod: POST
                description: Detaches a disk from an instance.
                parameters:
                  deviceName:
                    type: string
                    description: Disk device name to detach.
                    required: true
                    pattern: \w[\w.-]{0,254}
                    location: query
                  instance:
                    type: string
                    description: Instance name.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                  project:
                    type: string
                    description: Project name.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  zone:
                    type: string
                    description: Name of the zone scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - zone
                - instance
                - deviceName
                response:
                  $ref: Operation
                scopes:
                - https://www.googleapis.com/auth/compute
              get: &56
                id: compute.instances.get
                path: '{project}/zones/{zone}/instances/{instance}'
                httpMethod: GET
                description: Returns the specified instance resource.
                parameters:
                  instance:
                    type: string
                    description: Name of the instance resource to return.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  zone:
                    type: string
                    description: Name of the zone scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - zone
                - instance
                response:
                  $ref: Instance
                scopes:
                - https://www.googleapis.com/auth/compute
                - https://www.googleapis.com/auth/compute.readonly
              getSerialPortOutput: &57
                id: compute.instances.getSerialPortOutput
                path: '{project}/zones/{zone}/instances/{instance}/serialPort'
                httpMethod: GET
                description: Returns the specified instance's serial port output.
                parameters:
                  instance:
                    type: string
                    description: Name of the instance scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  zone:
                    type: string
                    description: Name of the zone scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - zone
                - instance
                response:
                  $ref: SerialPortOutput
                scopes:
                - https://www.googleapis.com/auth/compute
                - https://www.googleapis.com/auth/compute.readonly
              insert: &58
                id: compute.instances.insert
                path: '{project}/zones/{zone}/instances'
                httpMethod: POST
                description: Creates an instance resource in the specified project
                  using the data included in the request.
                parameters:
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  zone:
                    type: string
                    description: Name of the zone scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - zone
                request:
                  $ref: Instance
                response:
                  $ref: Operation
                scopes:
                - https://www.googleapis.com/auth/compute
              list: &59
                id: compute.instances.list
                path: '{project}/zones/{zone}/instances'
                httpMethod: GET
                description: Retrieves the list of instance resources contained within
                  the specified zone.
                parameters:
                  filter: &60
                    type: string
                    description: Optional. Filter expression for filtering listed
                      resources.
                    location: query
                  maxResults: &61
                    type: integer
                    description: Optional. Maximum count of results to be returned.
                      Maximum value is 500 and default value is 500.
                    default: '500'
                    format: uint32
                    minimum: '0'
                    maximum: '500'
                    location: query
                  pageToken: &62
                    type: string
                    description: Optional. Tag returned by a previous list request
                      truncated by maxResults. Used to continue a previous list request.
                    location: query
                  project: &63
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  zone: &64
                    type: string
                    description: Name of the zone scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - zone
                response:
                  $ref: InstanceList
                scopes:
                - https://www.googleapis.com/auth/compute
                - https://www.googleapis.com/auth/compute.readonly
              reset: &65
                id: compute.instances.reset
                path: '{project}/zones/{zone}/instances/{instance}/reset'
                httpMethod: POST
                description: Performs a hard reset on the instance.
                parameters:
                  instance:
                    type: string
                    description: Name of the instance scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  zone:
                    type: string
                    description: Name of the zone scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - zone
                - instance
                response:
                  $ref: Operation
                scopes:
                - https://www.googleapis.com/auth/compute
              setDiskAutoDelete: &66
                id: compute.instances.setDiskAutoDelete
                path: '{project}/zones/{zone}/instances/{instance}/setDiskAutoDelete'
                httpMethod: POST
                description: Sets the auto-delete flag for a disk attached to an instance
                parameters:
                  autoDelete:
                    type: boolean
                    description: Whether to auto-delete the disk when the instance
                      is deleted.
                    required: true
                    location: query
                  deviceName:
                    type: string
                    description: Disk device name to modify.
                    required: true
                    pattern: \w[\w.-]{0,254}
                    location: query
                  instance:
                    type: string
                    description: Instance name.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                  project:
                    type: string
                    description: Project name.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  zone:
                    type: string
                    description: Name of the zone scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - zone
                - instance
                - autoDelete
                - deviceName
                response:
                  $ref: Operation
                scopes:
                - https://www.googleapis.com/auth/compute
              setMetadata: &67
                id: compute.instances.setMetadata
                path: '{project}/zones/{zone}/instances/{instance}/setMetadata'
                httpMethod: POST
                description: Sets metadata for the specified instance to the data
                  included in the request.
                parameters:
                  instance:
                    type: string
                    description: Name of the instance scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  zone:
                    type: string
                    description: Name of the zone scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - zone
                - instance
                request:
                  $ref: Metadata
                response:
                  $ref: Operation
                scopes:
                - https://www.googleapis.com/auth/compute
              setScheduling: &68
                id: compute.instances.setScheduling
                path: '{project}/zones/{zone}/instances/{instance}/setScheduling'
                httpMethod: POST
                description: Sets an instance's scheduling options.
                parameters:
                  instance:
                    type: string
                    description: Instance name.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                  project:
                    type: string
                    description: Project name.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  zone:
                    type: string
                    description: Name of the zone scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - zone
                - instance
                request:
                  $ref: Scheduling
                response:
                  $ref: Operation
                scopes:
                - https://www.googleapis.com/auth/compute
              setTags: &69
                id: compute.instances.setTags
                path: '{project}/zones/{zone}/instances/{instance}/setTags'
                httpMethod: POST
                description: Sets tags for the specified instance to the data included
                  in the request.
                parameters:
                  instance:
                    type: string
                    description: Name of the instance scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  zone:
                    type: string
                    description: Name of the zone scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - zone
                - instance
                request:
                  $ref: Tags
                response:
                  $ref: Operation
                scopes:
                - https://www.googleapis.com/auth/compute
          machineTypes: &70
            methods:
              aggregatedList: &71
                id: compute.machineTypes.aggregatedList
                path: '{project}/aggregated/machineTypes'
                httpMethod: GET
                description: Retrieves the list of machine type resources grouped
                  by scope.
                parameters:
                  filter:
                    type: string
                    description: Optional. Filter expression for filtering listed
                      resources.
                    location: query
                  maxResults:
                    type: integer
                    description: Optional. Maximum count of results to be returned.
                      Maximum value is 500 and default value is 500.
                    default: '500'
                    format: uint32
                    minimum: '0'
                    maximum: '500'
                    location: query
                  pageToken:
                    type: string
                    description: Optional. Tag returned by a previous list request
                      truncated by maxResults. Used to continue a previous list request.
                    location: query
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                parameterOrder:
                - project
                response:
                  $ref: MachineTypeAggregatedList
                scopes:
                - https://www.googleapis.com/auth/compute
                - https://www.googleapis.com/auth/compute.readonly
              get: &72
                id: compute.machineTypes.get
                path: '{project}/zones/{zone}/machineTypes/{machineType}'
                httpMethod: GET
                description: Returns the specified machine type resource.
                parameters:
                  machineType:
                    type: string
                    description: Name of the machine type resource to return.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  zone:
                    type: string
                    description: Name of the zone scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - zone
                - machineType
                response:
                  $ref: MachineType
                scopes:
                - https://www.googleapis.com/auth/compute
                - https://www.googleapis.com/auth/compute.readonly
              list: &73
                id: compute.machineTypes.list
                path: '{project}/zones/{zone}/machineTypes'
                httpMethod: GET
                description: Retrieves the list of machine type resources available
                  to the specified project.
                parameters:
                  filter:
                    type: string
                    description: Optional. Filter expression for filtering listed
                      resources.
                    location: query
                  maxResults:
                    type: integer
                    description: Optional. Maximum count of results to be returned.
                      Maximum value is 500 and default value is 500.
                    default: '500'
                    format: uint32
                    minimum: '0'
                    maximum: '500'
                    location: query
                  pageToken:
                    type: string
                    description: Optional. Tag returned by a previous list request
                      truncated by maxResults. Used to continue a previous list request.
                    location: query
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  zone:
                    type: string
                    description: Name of the zone scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - zone
                response:
                  $ref: MachineTypeList
                scopes:
                - https://www.googleapis.com/auth/compute
                - https://www.googleapis.com/auth/compute.readonly
          networks: &74
            methods:
              delete: &75
                id: compute.networks.delete
                path: '{project}/global/networks/{network}'
                httpMethod: DELETE
                description: Deletes the specified network resource.
                parameters:
                  network:
                    type: string
                    description: Name of the network resource to delete.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                parameterOrder:
                - project
                - network
                response:
                  $ref: Operation
                scopes:
                - https://www.googleapis.com/auth/compute
              get: &76
                id: compute.networks.get
                path: '{project}/global/networks/{network}'
                httpMethod: GET
                description: Returns the specified network resource.
                parameters:
                  network:
                    type: string
                    description: Name of the network resource to return.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                parameterOrder:
                - project
                - network
                response:
                  $ref: Network
                scopes:
                - https://www.googleapis.com/auth/compute
                - https://www.googleapis.com/auth/compute.readonly
              insert: &77
                id: compute.networks.insert
                path: '{project}/global/networks'
                httpMethod: POST
                description: Creates a network resource in the specified project using
                  the data included in the request.
                parameters:
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                parameterOrder:
                - project
                request:
                  $ref: Network
                response:
                  $ref: Operation
                scopes:
                - https://www.googleapis.com/auth/compute
              list: &78
                id: compute.networks.list
                path: '{project}/global/networks'
                httpMethod: GET
                description: Retrieves the list of network resources available to
                  the specified project.
                parameters:
                  filter:
                    type: string
                    description: Optional. Filter expression for filtering listed
                      resources.
                    location: query
                  maxResults:
                    type: integer
                    description: Optional. Maximum count of results to be returned.
                      Maximum value is 500 and default value is 500.
                    default: '500'
                    format: uint32
                    minimum: '0'
                    maximum: '500'
                    location: query
                  pageToken:
                    type: string
                    description: Optional. Tag returned by a previous list request
                      truncated by maxResults. Used to continue a previous list request.
                    location: query
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                parameterOrder:
                - project
                response:
                  $ref: NetworkList
                scopes:
                - https://www.googleapis.com/auth/compute
                - https://www.googleapis.com/auth/compute.readonly
          projects: &79
            methods:
              get: &80
                id: compute.projects.get
                path: '{project}'
                httpMethod: GET
                description: Returns the specified project resource.
                parameters:
                  project:
                    type: string
                    description: Name of the project resource to retrieve.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                parameterOrder:
                - project
                response:
                  $ref: Project
                scopes:
                - https://www.googleapis.com/auth/compute
                - https://www.googleapis.com/auth/compute.readonly
              setCommonInstanceMetadata: &81
                id: compute.projects.setCommonInstanceMetadata
                path: '{project}/setCommonInstanceMetadata'
                httpMethod: POST
                description: Sets metadata common to all instances within the specified
                  project using the data included in the request.
                parameters:
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                parameterOrder:
                - project
                request:
                  $ref: Metadata
                response:
                  $ref: Operation
                scopes:
                - https://www.googleapis.com/auth/compute
          regionOperations: &82
            methods:
              delete: &83
                id: compute.regionOperations.delete
                path: '{project}/regions/{region}/operations/{operation}'
                httpMethod: DELETE
                description: Deletes the specified region-specific operation resource.
                parameters:
                  operation:
                    type: string
                    description: Name of the operation resource to delete.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  region:
                    type: string
                    description: Name of the region scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - region
                - operation
                scopes:
                - https://www.googleapis.com/auth/compute
              get: &84
                id: compute.regionOperations.get
                path: '{project}/regions/{region}/operations/{operation}'
                httpMethod: GET
                description: Retrieves the specified region-specific operation resource.
                parameters:
                  operation:
                    type: string
                    description: Name of the operation resource to return.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  region:
                    type: string
                    description: Name of the zone scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - region
                - operation
                response:
                  $ref: Operation
                scopes:
                - https://www.googleapis.com/auth/compute
                - https://www.googleapis.com/auth/compute.readonly
              list: &85
                id: compute.regionOperations.list
                path: '{project}/regions/{region}/operations'
                httpMethod: GET
                description: Retrieves the list of operation resources contained within
                  the specified region.
                parameters:
                  filter:
                    type: string
                    description: Optional. Filter expression for filtering listed
                      resources.
                    location: query
                  maxResults:
                    type: integer
                    description: Optional. Maximum count of results to be returned.
                      Maximum value is 500 and default value is 500.
                    default: '500'
                    format: uint32
                    minimum: '0'
                    maximum: '500'
                    location: query
                  pageToken:
                    type: string
                    description: Optional. Tag returned by a previous list request
                      truncated by maxResults. Used to continue a previous list request.
                    location: query
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  region:
                    type: string
                    description: Name of the region scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - region
                response:
                  $ref: OperationList
                scopes:
                - https://www.googleapis.com/auth/compute
                - https://www.googleapis.com/auth/compute.readonly
          regions: &86
            methods:
              get: &87
                id: compute.regions.get
                path: '{project}/regions/{region}'
                httpMethod: GET
                description: Returns the specified region resource.
                parameters:
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  region:
                    type: string
                    description: Name of the region resource to return.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - region
                response:
                  $ref: Region
                scopes:
                - https://www.googleapis.com/auth/compute
                - https://www.googleapis.com/auth/compute.readonly
              list: &88
                id: compute.regions.list
                path: '{project}/regions'
                httpMethod: GET
                description: Retrieves the list of region resources available to the
                  specified project.
                parameters:
                  filter:
                    type: string
                    description: Optional. Filter expression for filtering listed
                      resources.
                    location: query
                  maxResults:
                    type: integer
                    description: Optional. Maximum count of results to be returned.
                      Maximum value is 500 and default value is 500.
                    default: '500'
                    format: uint32
                    minimum: '0'
                    maximum: '500'
                    location: query
                  pageToken:
                    type: string
                    description: Optional. Tag returned by a previous list request
                      truncated by maxResults. Used to continue a previous list request.
                    location: query
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                parameterOrder:
                - project
                response:
                  $ref: RegionList
                scopes:
                - https://www.googleapis.com/auth/compute
                - https://www.googleapis.com/auth/compute.readonly
          routes: &89
            methods:
              delete: &90
                id: compute.routes.delete
                path: '{project}/global/routes/{route}'
                httpMethod: DELETE
                description: Deletes the specified route resource.
                parameters:
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  route:
                    type: string
                    description: Name of the route resource to delete.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - route
                response:
                  $ref: Operation
                scopes:
                - https://www.googleapis.com/auth/compute
              get: &91
                id: compute.routes.get
                path: '{project}/global/routes/{route}'
                httpMethod: GET
                description: Returns the specified route resource.
                parameters:
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  route:
                    type: string
                    description: Name of the route resource to return.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - route
                response:
                  $ref: Route
                scopes:
                - https://www.googleapis.com/auth/compute
                - https://www.googleapis.com/auth/compute.readonly
              insert: &92
                id: compute.routes.insert
                path: '{project}/global/routes'
                httpMethod: POST
                description: Creates a route resource in the specified project using
                  the data included in the request.
                parameters:
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                parameterOrder:
                - project
                request:
                  $ref: Route
                response:
                  $ref: Operation
                scopes:
                - https://www.googleapis.com/auth/compute
              list: &93
                id: compute.routes.list
                path: '{project}/global/routes'
                httpMethod: GET
                description: Retrieves the list of route resources available to the
                  specified project.
                parameters:
                  filter:
                    type: string
                    description: Optional. Filter expression for filtering listed
                      resources.
                    location: query
                  maxResults:
                    type: integer
                    description: Optional. Maximum count of results to be returned.
                      Maximum value is 500 and default value is 500.
                    default: '500'
                    format: uint32
                    minimum: '0'
                    maximum: '500'
                    location: query
                  pageToken:
                    type: string
                    description: Optional. Tag returned by a previous list request
                      truncated by maxResults. Used to continue a previous list request.
                    location: query
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                parameterOrder:
                - project
                response:
                  $ref: RouteList
                scopes:
                - https://www.googleapis.com/auth/compute
                - https://www.googleapis.com/auth/compute.readonly
          snapshots: &94
            methods:
              delete: &95
                id: compute.snapshots.delete
                path: '{project}/global/snapshots/{snapshot}'
                httpMethod: DELETE
                description: Deletes the specified persistent disk snapshot resource.
                parameters:
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  snapshot:
                    type: string
                    description: Name of the persistent disk snapshot resource to
                      delete.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - snapshot
                response:
                  $ref: Operation
                scopes:
                - https://www.googleapis.com/auth/compute
              get: &96
                id: compute.snapshots.get
                path: '{project}/global/snapshots/{snapshot}'
                httpMethod: GET
                description: Returns the specified persistent disk snapshot resource.
                parameters:
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  snapshot:
                    type: string
                    description: Name of the persistent disk snapshot resource to
                      return.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - snapshot
                response:
                  $ref: Snapshot
                scopes:
                - https://www.googleapis.com/auth/compute
                - https://www.googleapis.com/auth/compute.readonly
              list: &97
                id: compute.snapshots.list
                path: '{project}/global/snapshots'
                httpMethod: GET
                description: Retrieves the list of persistent disk snapshot resources
                  contained within the specified project.
                parameters:
                  filter:
                    type: string
                    description: Optional. Filter expression for filtering listed
                      resources.
                    location: query
                  maxResults:
                    type: integer
                    description: Optional. Maximum count of results to be returned.
                      Maximum value is 500 and default value is 500.
                    default: '500'
                    format: uint32
                    minimum: '0'
                    maximum: '500'
                    location: query
                  pageToken:
                    type: string
                    description: Optional. Tag returned by a previous list request
                      truncated by maxResults. Used to continue a previous list request.
                    location: query
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                parameterOrder:
                - project
                response:
                  $ref: SnapshotList
                scopes:
                - https://www.googleapis.com/auth/compute
                - https://www.googleapis.com/auth/compute.readonly
          targetInstances: &98
            methods:
              aggregatedList: &99
                id: compute.targetInstances.aggregatedList
                path: '{project}/aggregated/targetInstances'
                httpMethod: GET
                description: Retrieves the list of target instances grouped by scope.
                parameters:
                  filter:
                    type: string
                    description: Optional. Filter expression for filtering listed
                      resources.
                    location: query
                  maxResults:
                    type: integer
                    description: Optional. Maximum count of results to be returned.
                      Maximum value is 500 and default value is 500.
                    default: '500'
                    format: uint32
                    minimum: '0'
                    maximum: '500'
                    location: query
                  pageToken:
                    type: string
                    description: Optional. Tag returned by a previous list request
                      truncated by maxResults. Used to continue a previous list request.
                    location: query
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                parameterOrder:
                - project
                response:
                  $ref: TargetInstanceAggregatedList
                scopes:
                - https://www.googleapis.com/auth/compute
                - https://www.googleapis.com/auth/compute.readonly
              delete: &100
                id: compute.targetInstances.delete
                path: '{project}/zones/{zone}/targetInstances/{targetInstance}'
                httpMethod: DELETE
                description: Deletes the specified TargetInstance resource.
                parameters:
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  targetInstance:
                    type: string
                    description: Name of the TargetInstance resource to delete.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                  zone:
                    type: string
                    description: Name of the zone scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - zone
                - targetInstance
                response:
                  $ref: Operation
                scopes:
                - https://www.googleapis.com/auth/compute
              get: &101
                id: compute.targetInstances.get
                path: '{project}/zones/{zone}/targetInstances/{targetInstance}'
                httpMethod: GET
                description: Returns the specified TargetInstance resource.
                parameters:
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  targetInstance:
                    type: string
                    description: Name of the TargetInstance resource to return.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                  zone:
                    type: string
                    description: Name of the zone scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - zone
                - targetInstance
                response:
                  $ref: TargetInstance
                scopes:
                - https://www.googleapis.com/auth/compute
                - https://www.googleapis.com/auth/compute.readonly
              insert: &102
                id: compute.targetInstances.insert
                path: '{project}/zones/{zone}/targetInstances'
                httpMethod: POST
                description: Creates a TargetInstance resource in the specified project
                  and zone using the data included in the request.
                parameters:
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  zone:
                    type: string
                    description: Name of the zone scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - zone
                request:
                  $ref: TargetInstance
                response:
                  $ref: Operation
                scopes:
                - https://www.googleapis.com/auth/compute
              list: &103
                id: compute.targetInstances.list
                path: '{project}/zones/{zone}/targetInstances'
                httpMethod: GET
                description: Retrieves the list of TargetInstance resources available
                  to the specified project and zone.
                parameters:
                  filter:
                    type: string
                    description: Optional. Filter expression for filtering listed
                      resources.
                    location: query
                  maxResults:
                    type: integer
                    description: Optional. Maximum count of results to be returned.
                      Maximum value is 500 and default value is 500.
                    default: '500'
                    format: uint32
                    minimum: '0'
                    maximum: '500'
                    location: query
                  pageToken:
                    type: string
                    description: Optional. Tag returned by a previous list request
                      truncated by maxResults. Used to continue a previous list request.
                    location: query
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  zone:
                    type: string
                    description: Name of the zone scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - zone
                response:
                  $ref: TargetInstanceList
                scopes:
                - https://www.googleapis.com/auth/compute
                - https://www.googleapis.com/auth/compute.readonly
          targetPools: &104
            methods:
              addHealthCheck: &105
                id: compute.targetPools.addHealthCheck
                path: '{project}/regions/{region}/targetPools/{targetPool}/addHealthCheck'
                httpMethod: POST
                description: Adds health check URL to targetPool.
                parameters:
                  project:
                    type: string
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  region:
                    type: string
                    description: Name of the region scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                  targetPool:
                    type: string
                    description: Name of the TargetPool resource to which health_check_url
                      is to be added.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - region
                - targetPool
                request:
                  $ref: TargetPoolsAddHealthCheckRequest
                response:
                  $ref: Operation
                scopes:
                - https://www.googleapis.com/auth/compute
              addInstance: &106
                id: compute.targetPools.addInstance
                path: '{project}/regions/{region}/targetPools/{targetPool}/addInstance'
                httpMethod: POST
                description: Adds instance url to targetPool.
                parameters:
                  project:
                    type: string
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  region:
                    type: string
                    description: Name of the region scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                  targetPool:
                    type: string
                    description: Name of the TargetPool resource to which instance_url
                      is to be added.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - region
                - targetPool
                request:
                  $ref: TargetPoolsAddInstanceRequest
                response:
                  $ref: Operation
                scopes:
                - https://www.googleapis.com/auth/compute
              aggregatedList: &107
                id: compute.targetPools.aggregatedList
                path: '{project}/aggregated/targetPools'
                httpMethod: GET
                description: Retrieves the list of target pools grouped by scope.
                parameters:
                  filter:
                    type: string
                    description: Optional. Filter expression for filtering listed
                      resources.
                    location: query
                  maxResults:
                    type: integer
                    description: Optional. Maximum count of results to be returned.
                      Maximum value is 500 and default value is 500.
                    default: '500'
                    format: uint32
                    minimum: '0'
                    maximum: '500'
                    location: query
                  pageToken:
                    type: string
                    description: Optional. Tag returned by a previous list request
                      truncated by maxResults. Used to continue a previous list request.
                    location: query
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                parameterOrder:
                - project
                response:
                  $ref: TargetPoolAggregatedList
                scopes:
                - https://www.googleapis.com/auth/compute
                - https://www.googleapis.com/auth/compute.readonly
              delete: &108
                id: compute.targetPools.delete
                path: '{project}/regions/{region}/targetPools/{targetPool}'
                httpMethod: DELETE
                description: Deletes the specified TargetPool resource.
                parameters:
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  region:
                    type: string
                    description: Name of the region scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                  targetPool:
                    type: string
                    description: Name of the TargetPool resource to delete.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - region
                - targetPool
                response:
                  $ref: Operation
                scopes:
                - https://www.googleapis.com/auth/compute
              get: &109
                id: compute.targetPools.get
                path: '{project}/regions/{region}/targetPools/{targetPool}'
                httpMethod: GET
                description: Returns the specified TargetPool resource.
                parameters:
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  region:
                    type: string
                    description: Name of the region scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                  targetPool:
                    type: string
                    description: Name of the TargetPool resource to return.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - region
                - targetPool
                response:
                  $ref: TargetPool
                scopes:
                - https://www.googleapis.com/auth/compute
                - https://www.googleapis.com/auth/compute.readonly
              getHealth: &110
                id: compute.targetPools.getHealth
                path: '{project}/regions/{region}/targetPools/{targetPool}/getHealth'
                httpMethod: POST
                description: Gets the most recent health check results for each IP
                  for the given instance that is referenced by given TargetPool.
                parameters:
                  project:
                    type: string
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  region:
                    type: string
                    description: Name of the region scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                  targetPool:
                    type: string
                    description: Name of the TargetPool resource to which the queried
                      instance belongs.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - region
                - targetPool
                request:
                  $ref: InstanceReference
                response:
                  $ref: TargetPoolInstanceHealth
                scopes:
                - https://www.googleapis.com/auth/compute
                - https://www.googleapis.com/auth/compute.readonly
              insert: &111
                id: compute.targetPools.insert
                path: '{project}/regions/{region}/targetPools'
                httpMethod: POST
                description: Creates a TargetPool resource in the specified project
                  and region using the data included in the request.
                parameters:
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  region:
                    type: string
                    description: Name of the region scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - region
                request:
                  $ref: TargetPool
                response:
                  $ref: Operation
                scopes:
                - https://www.googleapis.com/auth/compute
              list: &112
                id: compute.targetPools.list
                path: '{project}/regions/{region}/targetPools'
                httpMethod: GET
                description: Retrieves the list of TargetPool resources available
                  to the specified project and region.
                parameters:
                  filter:
                    type: string
                    description: Optional. Filter expression for filtering listed
                      resources.
                    location: query
                  maxResults:
                    type: integer
                    description: Optional. Maximum count of results to be returned.
                      Maximum value is 500 and default value is 500.
                    default: '500'
                    format: uint32
                    minimum: '0'
                    maximum: '500'
                    location: query
                  pageToken:
                    type: string
                    description: Optional. Tag returned by a previous list request
                      truncated by maxResults. Used to continue a previous list request.
                    location: query
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  region:
                    type: string
                    description: Name of the region scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - region
                response:
                  $ref: TargetPoolList
                scopes:
                - https://www.googleapis.com/auth/compute
                - https://www.googleapis.com/auth/compute.readonly
              removeHealthCheck: &113
                id: compute.targetPools.removeHealthCheck
                path: '{project}/regions/{region}/targetPools/{targetPool}/removeHealthCheck'
                httpMethod: POST
                description: Removes health check URL from targetPool.
                parameters:
                  project:
                    type: string
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  region:
                    type: string
                    description: Name of the region scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                  targetPool:
                    type: string
                    description: Name of the TargetPool resource to which health_check_url
                      is to be removed.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - region
                - targetPool
                request:
                  $ref: TargetPoolsRemoveHealthCheckRequest
                response:
                  $ref: Operation
                scopes:
                - https://www.googleapis.com/auth/compute
              removeInstance: &114
                id: compute.targetPools.removeInstance
                path: '{project}/regions/{region}/targetPools/{targetPool}/removeInstance'
                httpMethod: POST
                description: Removes instance URL from targetPool.
                parameters:
                  project:
                    type: string
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  region:
                    type: string
                    description: Name of the region scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                  targetPool:
                    type: string
                    description: Name of the TargetPool resource to which instance_url
                      is to be removed.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - region
                - targetPool
                request:
                  $ref: TargetPoolsRemoveInstanceRequest
                response:
                  $ref: Operation
                scopes:
                - https://www.googleapis.com/auth/compute
              setBackup: &115
                id: compute.targetPools.setBackup
                path: '{project}/regions/{region}/targetPools/{targetPool}/setBackup'
                httpMethod: POST
                description: Changes backup pool configurations.
                parameters:
                  failoverRatio:
                    type: number
                    description: New failoverRatio value for the containing target
                      pool.
                    format: float
                    location: query
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  region:
                    type: string
                    description: Name of the region scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                  targetPool:
                    type: string
                    description: Name of the TargetPool resource for which the backup
                      is to be set.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - region
                - targetPool
                request:
                  $ref: TargetReference
                response:
                  $ref: Operation
                scopes:
                - https://www.googleapis.com/auth/compute
          zoneOperations: &116
            methods:
              delete: &117
                id: compute.zoneOperations.delete
                path: '{project}/zones/{zone}/operations/{operation}'
                httpMethod: DELETE
                description: Deletes the specified zone-specific operation resource.
                parameters:
                  operation:
                    type: string
                    description: Name of the operation resource to delete.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  zone:
                    type: string
                    description: Name of the zone scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - zone
                - operation
                scopes:
                - https://www.googleapis.com/auth/compute
              get: &118
                id: compute.zoneOperations.get
                path: '{project}/zones/{zone}/operations/{operation}'
                httpMethod: GET
                description: Retrieves the specified zone-specific operation resource.
                parameters:
                  operation:
                    type: string
                    description: Name of the operation resource to return.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  zone:
                    type: string
                    description: Name of the zone scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - zone
                - operation
                response:
                  $ref: Operation
                scopes:
                - https://www.googleapis.com/auth/compute
                - https://www.googleapis.com/auth/compute.readonly
              list: &119
                id: compute.zoneOperations.list
                path: '{project}/zones/{zone}/operations'
                httpMethod: GET
                description: Retrieves the list of operation resources contained within
                  the specified zone.
                parameters:
                  filter:
                    type: string
                    description: Optional. Filter expression for filtering listed
                      resources.
                    location: query
                  maxResults:
                    type: integer
                    description: Optional. Maximum count of results to be returned.
                      Maximum value is 500 and default value is 500.
                    default: '500'
                    format: uint32
                    minimum: '0'
                    maximum: '500'
                    location: query
                  pageToken:
                    type: string
                    description: Optional. Tag returned by a previous list request
                      truncated by maxResults. Used to continue a previous list request.
                    location: query
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  zone:
                    type: string
                    description: Name of the zone scoping this request.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - zone
                response:
                  $ref: OperationList
                scopes:
                - https://www.googleapis.com/auth/compute
                - https://www.googleapis.com/auth/compute.readonly
          zones: &120
            methods:
              get: &121
                id: compute.zones.get
                path: '{project}/zones/{zone}'
                httpMethod: GET
                description: Returns the specified zone resource.
                parameters:
                  project:
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                  zone:
                    type: string
                    description: Name of the zone resource to return.
                    required: true
                    pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
                    location: path
                parameterOrder:
                - project
                - zone
                response:
                  $ref: Zone
                scopes:
                - https://www.googleapis.com/auth/compute
                - https://www.googleapis.com/auth/compute.readonly
              list: &122
                id: compute.zones.list
                path: '{project}/zones'
                httpMethod: GET
                description: Retrieves the list of zone resources available to the
                  specified project.
                parameters:
                  filter: &123
                    type: string
                    description: Optional. Filter expression for filtering listed
                      resources.
                    location: query
                  maxResults: &124
                    type: integer
                    description: Optional. Maximum count of results to be returned.
                      Maximum value is 500 and default value is 500.
                    default: '500'
                    format: uint32
                    minimum: '0'
                    maximum: '500'
                    location: query
                  pageToken: &125
                    type: string
                    description: Optional. Tag returned by a previous list request
                      truncated by maxResults. Used to continue a previous list request.
                    location: query
                  project: &126
                    type: string
                    description: Name of the project scoping this request.
                    required: true
                    pattern: (?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))
                    location: path
                parameterOrder:
                - project
                response:
                  $ref: ZoneList
                scopes:
                - https://www.googleapis.com/auth/compute
                - https://www.googleapis.com/auth/compute.readonly
    discovered_apis:
      compute:v1: &2 !ruby/object:Google::APIClient::API
        document_base: !ruby/object:Addressable::URI
          validation_deferred: false
          scheme: https
          normalized_scheme: 
          uri_string: 
          hash: 
          host: www.googleapis.com
          authority: 
          normalized_host: 
          path: /discovery/v1/apis/compute/v1/rest
          normalized_path: 
        discovery_document: *1
        method_base: &3 !ruby/object:Addressable::URI
          validation_deferred: false
          scheme: https
          normalized_scheme: 
          uri_string: 
          hash: 
          host: www.googleapis.com
          authority: 
          normalized_host: 
          path: /compute/v1/projects/
          normalized_path: 
          password: 
          user: 
          userinfo: 
          normalized_userinfo: 
          normalized_password: 
          normalized_user: 
          port: 
          normalized_port: 
        discovered_resources:
        - !ruby/object:Google::APIClient::Resource
          api: *2
          method_base: *3
          name: addresses
          discovery_document: *4
          discovered_resources: []
          discovered_methods:
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: aggregatedList
            discovery_document: *5
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: delete
            discovery_document: *6
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: get
            discovery_document: *7
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: insert
            discovery_document: *8
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: list
            discovery_document: *9
        - !ruby/object:Google::APIClient::Resource
          api: *2
          method_base: *3
          name: disks
          discovery_document: *10
          discovered_resources: []
          discovered_methods:
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: aggregatedList
            discovery_document: *11
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: createSnapshot
            discovery_document: *12
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: delete
            discovery_document: *13
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: get
            discovery_document: *14
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: insert
            discovery_document: *15
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: list
            discovery_document: *16
        - !ruby/object:Google::APIClient::Resource
          api: *2
          method_base: *3
          name: firewalls
          discovery_document: *17
          discovered_resources: []
          discovered_methods:
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: delete
            discovery_document: *18
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: get
            discovery_document: *19
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: insert
            discovery_document: *20
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: list
            discovery_document: *21
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: patch
            discovery_document: *22
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: update
            discovery_document: *23
        - !ruby/object:Google::APIClient::Resource
          api: *2
          method_base: *3
          name: forwardingRules
          discovery_document: *24
          discovered_resources: []
          discovered_methods:
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: aggregatedList
            discovery_document: *25
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: delete
            discovery_document: *26
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: get
            discovery_document: *27
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: insert
            discovery_document: *28
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: list
            discovery_document: *29
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: setTarget
            discovery_document: *30
        - !ruby/object:Google::APIClient::Resource
          api: *2
          method_base: *3
          name: globalOperations
          discovery_document: *31
          discovered_resources: []
          discovered_methods:
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: aggregatedList
            discovery_document: *32
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: delete
            discovery_document: *33
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: get
            discovery_document: *34
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: list
            discovery_document: *35
        - !ruby/object:Google::APIClient::Resource
          api: *2
          method_base: *3
          name: httpHealthChecks
          discovery_document: *36
          discovered_resources: []
          discovered_methods:
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: delete
            discovery_document: *37
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: get
            discovery_document: *38
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: insert
            discovery_document: *39
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: list
            discovery_document: *40
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: patch
            discovery_document: *41
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: update
            discovery_document: *42
        - !ruby/object:Google::APIClient::Resource
          api: *2
          method_base: *3
          name: images
          discovery_document: *43
          discovered_resources: []
          discovered_methods:
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: delete
            discovery_document: *44
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: deprecate
            discovery_document: *45
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: get
            discovery_document: *46
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: insert
            discovery_document: *47
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: list
            discovery_document: *48
        - !ruby/object:Google::APIClient::Resource
          api: *2
          method_base: *3
          name: instances
          discovery_document: *49
          discovered_resources: []
          discovered_methods:
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: addAccessConfig
            discovery_document: *50
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: aggregatedList
            discovery_document: *51
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: attachDisk
            discovery_document: *52
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: delete
            discovery_document: *53
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: deleteAccessConfig
            discovery_document: *54
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: detachDisk
            discovery_document: *55
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: get
            discovery_document: *56
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: getSerialPortOutput
            discovery_document: *57
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: insert
            discovery_document: *58
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: list
            discovery_document: *59
            parameter_descriptions:
              filter: *60
              maxResults: *61
              pageToken: *62
              project: *63
              zone: *64
            uri_template: !ruby/object:Addressable::Template
              pattern: https://www.googleapis.com/compute/v1/projects/{project}/zones/{zone}/instances
              ordered_variable_defaults:
              - project
              - zone
              variables:
              - project
              - zone
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: reset
            discovery_document: *65
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: setDiskAutoDelete
            discovery_document: *66
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: setMetadata
            discovery_document: *67
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: setScheduling
            discovery_document: *68
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: setTags
            discovery_document: *69
        - !ruby/object:Google::APIClient::Resource
          api: *2
          method_base: *3
          name: machineTypes
          discovery_document: *70
          discovered_resources: []
          discovered_methods:
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: aggregatedList
            discovery_document: *71
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: get
            discovery_document: *72
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: list
            discovery_document: *73
        - !ruby/object:Google::APIClient::Resource
          api: *2
          method_base: *3
          name: networks
          discovery_document: *74
          discovered_resources: []
          discovered_methods:
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: delete
            discovery_document: *75
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: get
            discovery_document: *76
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: insert
            discovery_document: *77
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: list
            discovery_document: *78
        - !ruby/object:Google::APIClient::Resource
          api: *2
          method_base: *3
          name: projects
          discovery_document: *79
          discovered_resources: []
          discovered_methods:
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: get
            discovery_document: *80
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: setCommonInstanceMetadata
            discovery_document: *81
        - !ruby/object:Google::APIClient::Resource
          api: *2
          method_base: *3
          name: regionOperations
          discovery_document: *82
          discovered_resources: []
          discovered_methods:
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: delete
            discovery_document: *83
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: get
            discovery_document: *84
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: list
            discovery_document: *85
        - !ruby/object:Google::APIClient::Resource
          api: *2
          method_base: *3
          name: regions
          discovery_document: *86
          discovered_resources: []
          discovered_methods:
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: get
            discovery_document: *87
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: list
            discovery_document: *88
        - !ruby/object:Google::APIClient::Resource
          api: *2
          method_base: *3
          name: routes
          discovery_document: *89
          discovered_resources: []
          discovered_methods:
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: delete
            discovery_document: *90
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: get
            discovery_document: *91
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: insert
            discovery_document: *92
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: list
            discovery_document: *93
        - !ruby/object:Google::APIClient::Resource
          api: *2
          method_base: *3
          name: snapshots
          discovery_document: *94
          discovered_resources: []
          discovered_methods:
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: delete
            discovery_document: *95
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: get
            discovery_document: *96
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: list
            discovery_document: *97
        - !ruby/object:Google::APIClient::Resource
          api: *2
          method_base: *3
          name: targetInstances
          discovery_document: *98
          discovered_resources: []
          discovered_methods:
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: aggregatedList
            discovery_document: *99
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: delete
            discovery_document: *100
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: get
            discovery_document: *101
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: insert
            discovery_document: *102
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: list
            discovery_document: *103
        - !ruby/object:Google::APIClient::Resource
          api: *2
          method_base: *3
          name: targetPools
          discovery_document: *104
          discovered_resources: []
          discovered_methods:
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: addHealthCheck
            discovery_document: *105
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: addInstance
            discovery_document: *106
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: aggregatedList
            discovery_document: *107
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: delete
            discovery_document: *108
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: get
            discovery_document: *109
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: getHealth
            discovery_document: *110
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: insert
            discovery_document: *111
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: list
            discovery_document: *112
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: removeHealthCheck
            discovery_document: *113
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: removeInstance
            discovery_document: *114
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: setBackup
            discovery_document: *115
        - !ruby/object:Google::APIClient::Resource
          api: *2
          method_base: *3
          name: zoneOperations
          discovery_document: *116
          discovered_resources: []
          discovered_methods:
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: delete
            discovery_document: *117
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: get
            discovery_document: *118
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: list
            discovery_document: *119
        - !ruby/object:Google::APIClient::Resource
          api: *2
          method_base: *3
          name: zones
          discovery_document: *120
          discovered_resources: []
          discovered_methods:
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: get
            discovery_document: *121
          - !ruby/object:Google::APIClient::Method
            api: *2
            method_base: *3
            name: list
            discovery_document: *122
            parameter_descriptions:
              filter: *123
              maxResults: *124
              pageToken: *125
              project: *126
            uri_template: !ruby/object:Addressable::Template
              pattern: https://www.googleapis.com/compute/v1/projects/{project}/zones
              ordered_variable_defaults:
              - project
              variables:
              - project
        discovered_methods: []
    connection: !ruby/object:Faraday::Connection
      parallel_manager: 
      headers: !ruby/hash:Faraday::Utils::Headers
        User-Agent: Faraday v0.9.0
      params: !ruby/hash:Faraday::Utils::ParamsHash {}
      options: !ruby/struct:Faraday::RequestOptions
        params_encoder: !ruby/module 'Faraday::FlatParamsEncoder'
        proxy: 
        bind: 
        timeout: 
        open_timeout: 
        boundary: 
        oauth: 
      ssl: !ruby/struct:Faraday::SSLOptions
        verify: true
        ca_file: /Library/Ruby/Gems/2.0.0/gems/google-api-client-0.7.1/lib/cacerts.pem
        ca_path: 
        verify_mode: 
        cert_store: 
        client_cert: 
        client_key: 
        certificate: 
        private_key: 
        verify_depth: 
        version: 
        symbolized_key_set: !ruby/object:Set
          hash:
            :verify: true
            :ca_file: true
      default_parallel_manager: 
      builder: !ruby/object:Faraday::RackBuilder
        handlers:
        - !ruby/object:Faraday::RackBuilder::Handler
          name: Google::APIClient::Gzip
          args: []
          block: 
        - !ruby/object:Faraday::RackBuilder::Handler
          name: Faraday::Adapter::NetHttp
          args: []
          block: 
        app: !ruby/object:Google::APIClient::Gzip
          app: !ruby/object:Faraday::Adapter::NetHttp
            app: !ruby/object:Proc {}
      url_prefix: !ruby/object:URI::HTTP
        scheme: http
        user: 
        password: 
        host: 
        port: 80
        path: /
        query: 
        opaque: 
        registry: 
        fragment: 
        parser: 
      proxy: 
    base_uri: !ruby/object:Addressable::URI
      validation_deferred: false
      scheme: https
      normalized_scheme: 
      uri_string: 
      hash: 
      host: www.googleapis.com
      authority: 
      normalized_host: 
      path: /
      normalized_path: 
      password: 
      user: 
      userinfo: 
      normalized_userinfo: 
      normalized_password: 
      normalized_user: 
      port: 
      normalized_port: 
  compute: *2
collection: &128 !ruby/array:Fog::Compute::Google::Servers
  internal:
  - !ruby/object:Fog::Compute::Google::Server
    service: *127
    collection: *128
    attributes:
      kind: compute#instance
      id: '582007946841425629'
      creationTimestamp: '2014-03-10T03:09:24.139-07:00'
      :zone_name: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a
      :state: RUNNING
      :name: gateway-vpn
      :tags:
        fingerprint: 42WmSpB8rSM=
      :machine_type: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/machineTypes/g1-small
      canIpForward: true
      :network_interfaces:
      - network: https://www.googleapis.com/compute/v1/projects/innotechapp/global/networks/liberty-gce
        networkIP: 10.111.254.49
        name: nic0
        accessConfigs:
        - kind: compute#accessConfig
          type: ONE_TO_ONE_NAT
          name: External NAT
          natIP: 192.158.29.226
      :disks:
      - kind: compute#attachedDisk
        index: 0
        type: PERSISTENT
        mode: READ_WRITE
        source: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/disks/gateway-vpn
        deviceName: gateway-vpn
        boot: true
        autoDelete: false
      :metadata:
        kind: compute#metadata
        fingerprint: Mo1rwTZnlZ4=
      :service_accounts:
      - email: 388158271394@project.gserviceaccount.com
        scopes:
        - https://www.googleapis.com/auth/compute
        - https://www.googleapis.com/auth/devstorage.full_control
        - https://www.googleapis.com/auth/userinfo.email
      :self_link: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/instances/gateway-vpn
      scheduling:
        onHostMaintenance: MIGRATE
        automaticRestart: true
  - *129
  - !ruby/object:Fog::Compute::Google::Server
    service: *127
    collection: *128
    attributes:
      kind: compute#instance
      id: '492549396497031586'
      creationTimestamp: '2014-04-08T05:58:54.490-07:00'
      :zone_name: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a
      :state: RUNNING
      :name: hydra-demo-hydra1
      :tags:
        fingerprint: 42WmSpB8rSM=
      :machine_type: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/machineTypes/n1-standard-1
      canIpForward: false
      :network_interfaces:
      - network: https://www.googleapis.com/compute/v1/projects/innotechapp/global/networks/liberty-gce
        networkIP: 10.111.140.105
        name: nic0
        accessConfigs:
        - kind: compute#accessConfig
          type: ONE_TO_ONE_NAT
          name: External NAT
          natIP: 23.251.136.47
      :disks:
      - kind: compute#attachedDisk
        index: 0
        type: PERSISTENT
        mode: READ_WRITE
        source: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/disks/hydra-demo-hydra1
        deviceName: hydra-demo-hydra1
        boot: true
        autoDelete: false
      :metadata:
        kind: compute#metadata
        fingerprint: Mo1rwTZnlZ4=
      :service_accounts:
      - email: 388158271394@project.gserviceaccount.com
        scopes:
        - https://www.googleapis.com/auth/compute
        - https://www.googleapis.com/auth/devstorage.full_control
        - https://www.googleapis.com/auth/userinfo.email
      :self_link: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/instances/hydra-demo-hydra1
      scheduling:
        onHostMaintenance: MIGRATE
        automaticRestart: true
  - !ruby/object:Fog::Compute::Google::Server
    service: *127
    collection: *128
    attributes:
      kind: compute#instance
      id: '8782602039016764419'
      creationTimestamp: '2014-04-08T04:02:06.629-07:00'
      :zone_name: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a
      :state: RUNNING
      :name: hydra-demo-time1
      :tags:
        fingerprint: 42WmSpB8rSM=
      :machine_type: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/machineTypes/n1-standard-1
      canIpForward: false
      :network_interfaces:
      - network: https://www.googleapis.com/compute/v1/projects/innotechapp/global/networks/liberty-gce
        networkIP: 10.111.148.8
        name: nic0
        accessConfigs:
        - kind: compute#accessConfig
          type: ONE_TO_ONE_NAT
          name: External NAT
          natIP: 23.251.130.116
      :disks:
      - kind: compute#attachedDisk
        index: 0
        type: PERSISTENT
        mode: READ_WRITE
        source: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/disks/hydra-demo-time1
        deviceName: hydra-demo-time1
        boot: true
        autoDelete: false
      :metadata:
        kind: compute#metadata
        fingerprint: Mo1rwTZnlZ4=
      :service_accounts:
      - email: 388158271394@project.gserviceaccount.com
        scopes:
        - https://www.googleapis.com/auth/compute
        - https://www.googleapis.com/auth/devstorage.full_control
        - https://www.googleapis.com/auth/userinfo.email
      :self_link: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/instances/hydra-demo-time1
      scheduling:
        onHostMaintenance: MIGRATE
        automaticRestart: true
  - !ruby/object:Fog::Compute::Google::Server
    service: *127
    collection: *128
    attributes:
      kind: compute#instance
      id: '11976250790469353844'
      creationTimestamp: '2014-04-21T08:25:24.238-07:00'
      :zone_name: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a
      :state: RUNNING
      :name: liberty-demo-alfr3d10
      :tags:
        fingerprint: 42WmSpB8rSM=
      :machine_type: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/machineTypes/n1-standard-1
      canIpForward: false
      :network_interfaces:
      - network: https://www.googleapis.com/compute/v1/projects/innotechapp/global/networks/liberty-gce
        networkIP: 10.111.62.49
        name: nic0
        accessConfigs:
        - kind: compute#accessConfig
          type: ONE_TO_ONE_NAT
          name: External NAT
          natIP: 146.148.8.38
      :disks:
      - kind: compute#attachedDisk
        index: 0
        type: PERSISTENT
        mode: READ_WRITE
        source: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/disks/liberty-demo-alfr3d10
        deviceName: persistent-disk-0
        boot: true
        autoDelete: false
      :metadata:
        kind: compute#metadata
        fingerprint: eLeTCPJMZdU=
        items:
        - key: Name
          value: liberty-demo-alfr3d10
      :self_link: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/instances/liberty-demo-alfr3d10
      scheduling:
        onHostMaintenance: MIGRATE
        automaticRestart: true
  - !ruby/object:Fog::Compute::Google::Server
    service: *127
    collection: *128
    attributes:
      kind: compute#instance
      id: '15664158785156166173'
      creationTimestamp: '2014-04-29T23:14:46.464-07:00'
      :zone_name: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a
      :state: RUNNING
      :name: liberty-demo-config2
      :tags:
        fingerprint: 42WmSpB8rSM=
      :machine_type: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/machineTypes/n1-standard-1
      canIpForward: false
      :network_interfaces:
      - network: https://www.googleapis.com/compute/v1/projects/innotechapp/global/networks/liberty-gce
        networkIP: 10.111.27.173
        name: nic0
        accessConfigs:
        - kind: compute#accessConfig
          type: ONE_TO_ONE_NAT
          name: External NAT
          natIP: 146.148.11.13
      :disks:
      - kind: compute#attachedDisk
        index: 0
        type: PERSISTENT
        mode: READ_WRITE
        source: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/disks/liberty-demo-config2
        deviceName: persistent-disk-0
        boot: true
        autoDelete: false
      - kind: compute#attachedDisk
        index: 1
        type: PERSISTENT
        mode: READ_WRITE
        source: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/disks/liberty-demo-config2-data
        deviceName: liberty-demo-config2-data
        autoDelete: false
      :metadata:
        kind: compute#metadata
        fingerprint: CgMfP_UmTHw=
        items:
        - key: Name
          value: liberty-demo-config2
      :self_link: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/instances/liberty-demo-config2
      scheduling:
        onHostMaintenance: MIGRATE
        automaticRestart: true
  - !ruby/object:Fog::Compute::Google::Server
    service: *127
    collection: *128
    attributes:
      kind: compute#instance
      id: '8733005407176650179'
      creationTimestamp: '2014-04-29T22:30:17.844-07:00'
      :zone_name: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a
      :state: RUNNING
      :name: liberty-demo-hydra0
      :tags:
        fingerprint: 42WmSpB8rSM=
      :machine_type: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/machineTypes/n1-standard-1
      canIpForward: false
      :network_interfaces:
      - network: https://www.googleapis.com/compute/v1/projects/innotechapp/global/networks/liberty-gce
        networkIP: 10.111.172.192
        name: nic0
        accessConfigs:
        - kind: compute#accessConfig
          type: ONE_TO_ONE_NAT
          name: External NAT
          natIP: 146.148.7.192
      :disks:
      - kind: compute#attachedDisk
        index: 0
        type: PERSISTENT
        mode: READ_WRITE
        source: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/disks/liberty-demo-hydra0
        deviceName: persistent-disk-0
        boot: true
        autoDelete: false
      :metadata:
        kind: compute#metadata
        fingerprint: 7qaHzRM_GWQ=
        items:
        - key: Name
          value: liberty-demo-hydra0
      :self_link: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/instances/liberty-demo-hydra0
      scheduling:
        onHostMaintenance: MIGRATE
        automaticRestart: true
  - !ruby/object:Fog::Compute::Google::Server
    service: *127
    collection: *128
    attributes:
      kind: compute#instance
      id: '11588981612105717289'
      creationTimestamp: '2014-04-29T22:52:02.549-07:00'
      :zone_name: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a
      :state: RUNNING
      :name: liberty-demo-shard0rep2
      :tags:
        fingerprint: 42WmSpB8rSM=
      :machine_type: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/machineTypes/n1-standard-2
      canIpForward: false
      :network_interfaces:
      - network: https://www.googleapis.com/compute/v1/projects/innotechapp/global/networks/liberty-gce
        networkIP: 10.111.37.44
        name: nic0
        accessConfigs:
        - kind: compute#accessConfig
          type: ONE_TO_ONE_NAT
          name: External NAT
          natIP: 146.148.16.100
      :disks:
      - kind: compute#attachedDisk
        index: 0
        type: PERSISTENT
        mode: READ_WRITE
        source: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/disks/liberty-demo-shard0rep2
        deviceName: persistent-disk-0
        boot: true
        autoDelete: false
      - kind: compute#attachedDisk
        index: 1
        type: PERSISTENT
        mode: READ_WRITE
        source: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/disks/liberty-demo-shard0rep2-log
        deviceName: liberty-demo-shard0rep2-log
        autoDelete: false
      - kind: compute#attachedDisk
        index: 2
        type: PERSISTENT
        mode: READ_WRITE
        source: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/disks/liberty-demo-shard0rep2-journal
        deviceName: liberty-demo-shard0rep2-journal
        autoDelete: false
      - kind: compute#attachedDisk
        index: 3
        type: PERSISTENT
        mode: READ_WRITE
        source: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/disks/liberty-demo-shard0rep2-data
        deviceName: liberty-demo-shard0rep2-data
        autoDelete: false
      :metadata:
        kind: compute#metadata
        fingerprint: hnGUQECA9qQ=
        items:
        - key: Name
          value: liberty-demo-shard0rep2
      :self_link: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/instances/liberty-demo-shard0rep2
      scheduling:
        onHostMaintenance: MIGRATE
        automaticRestart: true
  - !ruby/object:Fog::Compute::Google::Server
    service: *127
    collection: *128
    attributes:
      kind: compute#instance
      id: '2021541936703765551'
      creationTimestamp: '2014-04-29T22:58:36.043-07:00'
      :zone_name: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a
      :state: RUNNING
      :name: liberty-demo-shard1rep2
      :tags:
        fingerprint: 42WmSpB8rSM=
      :machine_type: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/machineTypes/n1-standard-2
      canIpForward: false
      :network_interfaces:
      - network: https://www.googleapis.com/compute/v1/projects/innotechapp/global/networks/liberty-gce
        networkIP: 10.111.88.162
        name: nic0
        accessConfigs:
        - kind: compute#accessConfig
          type: ONE_TO_ONE_NAT
          name: External NAT
          natIP: 146.148.30.24
      :disks:
      - kind: compute#attachedDisk
        index: 0
        type: PERSISTENT
        mode: READ_WRITE
        source: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/disks/liberty-demo-shard1rep2
        deviceName: persistent-disk-0
        boot: true
        autoDelete: false
      - kind: compute#attachedDisk
        index: 1
        type: PERSISTENT
        mode: READ_WRITE
        source: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/disks/liberty-demo-shard1rep2-log
        deviceName: liberty-demo-shard1rep2-log
        autoDelete: false
      - kind: compute#attachedDisk
        index: 2
        type: PERSISTENT
        mode: READ_WRITE
        source: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/disks/liberty-demo-shard1rep2-journal
        deviceName: liberty-demo-shard1rep2-journal
        autoDelete: false
      - kind: compute#attachedDisk
        index: 3
        type: PERSISTENT
        mode: READ_WRITE
        source: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/disks/liberty-demo-shard1rep2-data
        deviceName: liberty-demo-shard1rep2-data
        autoDelete: false
      :metadata:
        kind: compute#metadata
        fingerprint: wyIl8TOnYbY=
        items:
        - key: Name
          value: liberty-demo-shard1rep2
      :self_link: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/instances/liberty-demo-shard1rep2
      scheduling:
        onHostMaintenance: MIGRATE
        automaticRestart: true
  - !ruby/object:Fog::Compute::Google::Server
    service: *127
    collection: *128
    attributes:
      kind: compute#instance
      id: '4012971586364765648'
      creationTimestamp: '2014-04-29T23:05:13.874-07:00'
      :zone_name: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a
      :state: RUNNING
      :name: liberty-demo-shard2rep2
      :tags:
        fingerprint: 42WmSpB8rSM=
      :machine_type: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/machineTypes/n1-standard-2
      canIpForward: false
      :network_interfaces:
      - network: https://www.googleapis.com/compute/v1/projects/innotechapp/global/networks/liberty-gce
        networkIP: 10.111.158.16
        name: nic0
        accessConfigs:
        - kind: compute#accessConfig
          type: ONE_TO_ONE_NAT
          name: External NAT
          natIP: 23.251.128.58
      :disks:
      - kind: compute#attachedDisk
        index: 0
        type: PERSISTENT
        mode: READ_WRITE
        source: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/disks/liberty-demo-shard2rep2
        deviceName: persistent-disk-0
        boot: true
        autoDelete: false
      - kind: compute#attachedDisk
        index: 1
        type: PERSISTENT
        mode: READ_WRITE
        source: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/disks/liberty-demo-shard2rep2-log
        deviceName: liberty-demo-shard2rep2-log
        autoDelete: false
      - kind: compute#attachedDisk
        index: 2
        type: PERSISTENT
        mode: READ_WRITE
        source: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/disks/liberty-demo-shard2rep2-journal
        deviceName: liberty-demo-shard2rep2-journal
        autoDelete: false
      - kind: compute#attachedDisk
        index: 3
        type: PERSISTENT
        mode: READ_WRITE
        source: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/disks/liberty-demo-shard2rep2-data
        deviceName: liberty-demo-shard2rep2-data
        autoDelete: false
      :metadata:
        kind: compute#metadata
        fingerprint: c82e93M4rRw=
        items:
        - key: Name
          value: liberty-demo-shard2rep2
      :self_link: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/instances/liberty-demo-shard2rep2
      scheduling:
        onHostMaintenance: MIGRATE
        automaticRestart: true
  - !ruby/object:Fog::Compute::Google::Server
    service: *127
    collection: *128
    attributes:
      kind: compute#instance
      id: '16634838981807795348'
      creationTimestamp: '2014-04-23T08:02:50.602-07:00'
      :zone_name: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a
      :state: RUNNING
      :name: liberty-dev-alfr3d10
      :tags:
        fingerprint: 42WmSpB8rSM=
      :machine_type: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/machineTypes/n1-standard-1
      canIpForward: false
      :network_interfaces:
      - network: https://www.googleapis.com/compute/v1/projects/innotechapp/global/networks/liberty-gce
        networkIP: 10.111.8.123
        name: nic0
        accessConfigs:
        - kind: compute#accessConfig
          type: ONE_TO_ONE_NAT
          name: External NAT
          natIP: 146.148.18.131
      :disks:
      - kind: compute#attachedDisk
        index: 0
        type: PERSISTENT
        mode: READ_WRITE
        source: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/disks/liberty-dev-alfr3d10
        deviceName: persistent-disk-0
        boot: true
        autoDelete: false
      :metadata:
        kind: compute#metadata
        fingerprint: DV4Mp1DgoeU=
        items:
        - key: Name
          value: liberty-dev-alfr3d10
      :self_link: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/instances/liberty-dev-alfr3d10
      scheduling:
        onHostMaintenance: MIGRATE
        automaticRestart: true
  - !ruby/object:Fog::Compute::Google::Server
    service: *127
    collection: *128
    attributes:
      kind: compute#instance
      id: '5967473922969346198'
      creationTimestamp: '2014-03-10T03:09:24.138-07:00'
      :zone_name: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a
      :state: RUNNING
      :name: net-hydra
      :tags:
        items:
        - hydra2-hydra-app-com
        fingerprint: Dl0FFSMnDA0=
      :machine_type: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/machineTypes/n1-standard-1
      canIpForward: false
      :network_interfaces:
      - network: https://www.googleapis.com/compute/v1/projects/innotechapp/global/networks/net-hydra-etcd
        networkIP: 10.0.0.76
        name: nic0
        accessConfigs:
        - kind: compute#accessConfig
          type: ONE_TO_ONE_NAT
          name: External NAT
          natIP: 23.251.139.81
      :disks:
      - kind: compute#attachedDisk
        index: 0
        type: PERSISTENT
        mode: READ_WRITE
        source: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/disks/net-hydra
        deviceName: net-hydra
        boot: true
        autoDelete: false
      :metadata:
        kind: compute#metadata
        fingerprint: Mo1rwTZnlZ4=
      :service_accounts:
      - email: 388158271394@project.gserviceaccount.com
        scopes:
        - https://www.googleapis.com/auth/compute
        - https://www.googleapis.com/auth/devstorage.full_control
        - https://www.googleapis.com/auth/userinfo.email
      :self_link: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/instances/net-hydra
      scheduling:
        onHostMaintenance: MIGRATE
        automaticRestart: true
  - !ruby/object:Fog::Compute::Google::Server
    service: *127
    collection: *128
    attributes:
      kind: compute#instance
      id: '4280909020712858352'
      creationTimestamp: '2014-03-10T03:09:23.815-07:00'
      :zone_name: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a
      :state: RUNNING
      :name: net-redis-listener
      :tags:
        fingerprint: 42WmSpB8rSM=
      :machine_type: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/machineTypes/n1-standard-1
      canIpForward: false
      :network_interfaces:
      - network: https://www.googleapis.com/compute/v1/projects/innotechapp/global/networks/net-redis-listener
        networkIP: 10.0.1.92
        name: nic0
        accessConfigs:
        - kind: compute#accessConfig
          type: ONE_TO_ONE_NAT
          name: External NAT
          natIP: 23.251.140.113
      :disks:
      - kind: compute#attachedDisk
        index: 0
        type: PERSISTENT
        mode: READ_WRITE
        source: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/disks/net-redis-listener
        deviceName: net-redis-listener
        boot: true
        autoDelete: false
      :metadata:
        kind: compute#metadata
        fingerprint: Mo1rwTZnlZ4=
      :service_accounts:
      - email: 388158271394@project.gserviceaccount.com
        scopes:
        - https://www.googleapis.com/auth/compute
        - https://www.googleapis.com/auth/devstorage.full_control
        - https://www.googleapis.com/auth/userinfo.email
      :self_link: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/instances/net-redis-listener
      scheduling:
        onHostMaintenance: MIGRATE
        automaticRestart: true
  - !ruby/object:Fog::Compute::Google::Server
    service: *127
    collection: *128
    attributes:
      kind: compute#instance
      id: '18378672279023254460'
      creationTimestamp: '2014-04-24T04:38:44.303-07:00'
      :zone_name: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a
      :state: RUNNING
      :name: plumbing-vpn0
      :tags:
        fingerprint: 42WmSpB8rSM=
      :machine_type: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/machineTypes/n1-standard-1
      canIpForward: false
      :network_interfaces:
      - network: https://www.googleapis.com/compute/v1/projects/innotechapp/global/networks/liberty-gce
        networkIP: 10.111.151.216
        name: nic0
        accessConfigs:
        - kind: compute#accessConfig
          type: ONE_TO_ONE_NAT
          name: External NAT
          natIP: 23.251.135.177
      :disks:
      - kind: compute#attachedDisk
        index: 0
        type: PERSISTENT
        mode: READ_WRITE
        source: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/disks/plumbing-vpn0
        deviceName: persistent-disk-0
        boot: true
        autoDelete: true
      :metadata:
        kind: compute#metadata
        fingerprint: UwIPAZkUGdQ=
        items:
        - key: Name
          value: plumbing-vpn0
      :self_link: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/instances/plumbing-vpn0
      scheduling:
        onHostMaintenance: MIGRATE
        automaticRestart: true
  ivars:
    :@service: *127
    :@loaded: true
attributes:
  kind: compute#instance
  id: '1662612680022257298'
  creationTimestamp: '2014-04-29T08:25:55.528-07:00'
  :zone_name: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a
  :state: RUNNING
  :name: german-dployr
  :tags:
    fingerprint: 42WmSpB8rSM=
  :machine_type: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/machineTypes/f1-micro
  canIpForward: false
  :network_interfaces:
  - network: https://www.googleapis.com/compute/v1/projects/innotechapp/global/networks/liberty-gce
    networkIP: 10.111.157.173
    name: nic0
    accessConfigs:
    - kind: compute#accessConfig
      type: ONE_TO_ONE_NAT
      name: External NAT
      natIP: 146.148.9.90
  :disks:
  - kind: compute#attachedDisk
    index: 0
    type: PERSISTENT
    mode: READ_WRITE
    source: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/disks/german-dployr
    deviceName: persistent-disk-0
    boot: true
    autoDelete: false
  :metadata:
    kind: compute#metadata
    fingerprint: Mo1rwTZnlZ4=
  :self_link: https://www.googleapis.com/compute/v1/projects/innotechapp/zones/europe-west1-a/instances/german-dployr
  scheduling:
    onHostMaintenance: MIGRATE
    automaticRestart: false
